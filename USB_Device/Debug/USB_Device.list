
USB_Device.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012b8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000088  08001468  08001468  00011468  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080014f0  080014f0  00020060  2**0
                  CONTENTS
  4 .ARM          00000000  080014f0  080014f0  00020060  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014f0  080014f0  00020060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014f0  080014f0  000114f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014f4  080014f4  000114f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  080014f8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020060  2**0
                  CONTENTS
 10 .bss          0000016c  20000060  20000060  00020060  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001cc  200001cc  00020060  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020060  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000fe4  00000000  00000000  000200d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000004a3  00000000  00000000  000210b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000c8  00000000  00000000  00021560  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000084  00000000  00000000  00021628  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0001b0d3  00000000  00000000  000216ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000012f8  00000000  00000000  0003c77f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0009759c  00000000  00000000  0003da77  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000ad8  00000000  00000000  000d5014  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000069  00000000  00000000  000d5aec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000060 	.word	0x20000060
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001450 	.word	0x08001450

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000064 	.word	0x20000064
 80001ec:	08001450 	.word	0x08001450

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr

080002de <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002de:	b580      	push	{r7, lr}
 80002e0:	b086      	sub	sp, #24
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ea:	2300      	movs	r3, #0
 80002ec:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e009      	b.n	8000308 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002f4:	68bb      	ldr	r3, [r7, #8]
 80002f6:	1c5a      	adds	r2, r3, #1
 80002f8:	60ba      	str	r2, [r7, #8]
 80002fa:	781b      	ldrb	r3, [r3, #0]
 80002fc:	4618      	mov	r0, r3
 80002fe:	f7ff ffc7 	bl	8000290 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 8000302:	697b      	ldr	r3, [r7, #20]
 8000304:	3301      	adds	r3, #1
 8000306:	617b      	str	r3, [r7, #20]
 8000308:	697a      	ldr	r2, [r7, #20]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	429a      	cmp	r2, r3
 800030e:	dbf1      	blt.n	80002f4 <_write+0x16>

  return len;
 8000310:	687b      	ldr	r3, [r7, #4]
}
 8000312:	4618      	mov	r0, r3
 8000314:	3718      	adds	r7, #24
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
	...

0800031c <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	4603      	mov	r3, r0
 8000324:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000326:	79fb      	ldrb	r3, [r7, #7]
 8000328:	2b02      	cmp	r3, #2
 800032a:	d00a      	beq.n	8000342 <_get_log_level_string+0x26>
 800032c:	2b02      	cmp	r3, #2
 800032e:	dc0a      	bgt.n	8000346 <_get_log_level_string+0x2a>
 8000330:	2b00      	cmp	r3, #0
 8000332:	d002      	beq.n	800033a <_get_log_level_string+0x1e>
 8000334:	2b01      	cmp	r3, #1
 8000336:	d002      	beq.n	800033e <_get_log_level_string+0x22>
 8000338:	e005      	b.n	8000346 <_get_log_level_string+0x2a>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 800033a:	4b06      	ldr	r3, [pc, #24]	; (8000354 <_get_log_level_string+0x38>)
 800033c:	e004      	b.n	8000348 <_get_log_level_string+0x2c>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 800033e:	4b06      	ldr	r3, [pc, #24]	; (8000358 <_get_log_level_string+0x3c>)
 8000340:	e002      	b.n	8000348 <_get_log_level_string+0x2c>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 8000342:	4b06      	ldr	r3, [pc, #24]	; (800035c <_get_log_level_string+0x40>)
 8000344:	e000      	b.n	8000348 <_get_log_level_string+0x2c>
        default:
        	return "ERROR";
 8000346:	4b03      	ldr	r3, [pc, #12]	; (8000354 <_get_log_level_string+0x38>)
    }
}
 8000348:	4618      	mov	r0, r3
 800034a:	370c      	adds	r7, #12
 800034c:	46bd      	mov	sp, r7
 800034e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000352:	4770      	bx	lr
 8000354:	08001468 	.word	0x08001468
 8000358:	08001470 	.word	0x08001470
 800035c:	08001478 	.word	0x08001478

08000360 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000360:	b580      	push	{r7, lr}
 8000362:	b084      	sub	sp, #16
 8000364:	af00      	add	r7, sp, #0
 8000366:	4603      	mov	r3, r0
 8000368:	60b9      	str	r1, [r7, #8]
 800036a:	607a      	str	r2, [r7, #4]
 800036c:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level) {
 800036e:	4b0f      	ldr	r3, [pc, #60]	; (80003ac <_log+0x4c>)
 8000370:	781b      	ldrb	r3, [r3, #0]
 8000372:	7bfa      	ldrb	r2, [r7, #15]
 8000374:	429a      	cmp	r2, r3
 8000376:	d814      	bhi.n	80003a2 <_log+0x42>
        return;
    }

	printf("[%s] ", _get_log_level_string(log_level));
 8000378:	7bfb      	ldrb	r3, [r7, #15]
 800037a:	4618      	mov	r0, r3
 800037c:	f7ff ffce 	bl	800031c <_get_log_level_string>
 8000380:	4603      	mov	r3, r0
 8000382:	4619      	mov	r1, r3
 8000384:	480a      	ldr	r0, [pc, #40]	; (80003b0 <_log+0x50>)
 8000386:	f000 fc57 	bl	8000c38 <iprintf>
	vfprintf(stdout, format, args);
 800038a:	4b0a      	ldr	r3, [pc, #40]	; (80003b4 <_log+0x54>)
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	689b      	ldr	r3, [r3, #8]
 8000390:	687a      	ldr	r2, [r7, #4]
 8000392:	68b9      	ldr	r1, [r7, #8]
 8000394:	4618      	mov	r0, r3
 8000396:	f000 f9f3 	bl	8000780 <vfiprintf>
	printf("\n");
 800039a:	200a      	movs	r0, #10
 800039c:	f000 fc5e 	bl	8000c5c <putchar>
 80003a0:	e000      	b.n	80003a4 <_log+0x44>
        return;
 80003a2:	bf00      	nop
}
 80003a4:	3710      	adds	r7, #16
 80003a6:	46bd      	mov	sp, r7
 80003a8:	bd80      	pop	{r7, pc}
 80003aa:	bf00      	nop
 80003ac:	20000000 	.word	0x20000000
 80003b0:	08001480 	.word	0x08001480
 80003b4:	2000005c 	.word	0x2000005c

080003b8 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 80003b8:	b40f      	push	{r0, r1, r2, r3}
 80003ba:	b580      	push	{r7, lr}
 80003bc:	b082      	sub	sp, #8
 80003be:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003c0:	f107 0314 	add.w	r3, r7, #20
 80003c4:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003c6:	687a      	ldr	r2, [r7, #4]
 80003c8:	6939      	ldr	r1, [r7, #16]
 80003ca:	2001      	movs	r0, #1
 80003cc:	f7ff ffc8 	bl	8000360 <_log>
    va_end(args);
}
 80003d0:	bf00      	nop
 80003d2:	3708      	adds	r7, #8
 80003d4:	46bd      	mov	sp, r7
 80003d6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003da:	b004      	add	sp, #16
 80003dc:	4770      	bx	lr
	...

080003e0 <main>:
#include <stdint.h>

#include "logger.h"

int main(void)
{
 80003e0:	b580      	push	{r7, lr}
 80003e2:	af00      	add	r7, sp, #0
	log_info("Program entrypoint.");
 80003e4:	4801      	ldr	r0, [pc, #4]	; (80003ec <main+0xc>)
 80003e6:	f7ff ffe7 	bl	80003b8 <log_info>
	for(;;);
 80003ea:	e7fe      	b.n	80003ea <main+0xa>
 80003ec:	080014a8 	.word	0x080014a8

080003f0 <config_clock>:
 * HCLK = 72MHz
 *
 */


void config_clock(void) {
 80003f0:	b480      	push	{r7}
 80003f2:	af00      	add	r7, sp, #0
	//Modify Flash latency
	MODIFY_REG(FLASH->ACR,
 80003f4:	4b25      	ldr	r3, [pc, #148]	; (800048c <config_clock+0x9c>)
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	f023 030f 	bic.w	r3, r3, #15
 80003fc:	4a23      	ldr	r2, [pc, #140]	; (800048c <config_clock+0x9c>)
 80003fe:	f043 0302 	orr.w	r3, r3, #2
 8000402:	6013      	str	r3, [r2, #0]
			FLASH_ACR_LATENCY,
			FLASH_ACR_LATENCY_2WS << FLASH_ACR_LATENCY_Pos);

	//Enable HSE
	SET_BIT(RCC->CR, RCC_CR_HSEON);
 8000404:	4b22      	ldr	r3, [pc, #136]	; (8000490 <config_clock+0xa0>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	4a21      	ldr	r2, [pc, #132]	; (8000490 <config_clock+0xa0>)
 800040a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800040e:	6013      	str	r3, [r2, #0]

	//Wait until HSE is stable
	while( !(READ_BIT(RCC->CR, RCC_CR_HSERDY)) );
 8000410:	bf00      	nop
 8000412:	4b1f      	ldr	r3, [pc, #124]	; (8000490 <config_clock+0xa0>)
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800041a:	2b00      	cmp	r3, #0
 800041c:	d0f9      	beq.n	8000412 <config_clock+0x22>

	//Configure PLL: source=HSE, SYSCLK=72MHz
	MODIFY_REG(RCC->PLLCFGR,
 800041e:	4b1c      	ldr	r3, [pc, #112]	; (8000490 <config_clock+0xa0>)
 8000420:	685b      	ldr	r3, [r3, #4]
 8000422:	4a1c      	ldr	r2, [pc, #112]	; (8000494 <config_clock+0xa4>)
 8000424:	401a      	ands	r2, r3
 8000426:	491a      	ldr	r1, [pc, #104]	; (8000490 <config_clock+0xa0>)
 8000428:	4b1b      	ldr	r3, [pc, #108]	; (8000498 <config_clock+0xa8>)
 800042a:	4313      	orrs	r3, r2
 800042c:	604b      	str	r3, [r1, #4]
		RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLQ | RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLP,
		_VAL2FLD(RCC_PLLCFGR_PLLM, 4) | _VAL2FLD(RCC_PLLCFGR_PLLN, 72) | _VAL2FLD(RCC_PLLCFGR_PLLQ, 3) | RCC_PLLCFGR_PLLSRC_HSE
	);

	// Enable PLL module
	SET_BIT(RCC->CR, RCC_CR_PLLON);
 800042e:	4b18      	ldr	r3, [pc, #96]	; (8000490 <config_clock+0xa0>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	4a17      	ldr	r2, [pc, #92]	; (8000490 <config_clock+0xa0>)
 8000434:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000438:	6013      	str	r3, [r2, #0]

	// Wait until PLL is stable
	while (!READ_BIT(RCC->CR, RCC_CR_PLLRDY));
 800043a:	bf00      	nop
 800043c:	4b14      	ldr	r3, [pc, #80]	; (8000490 <config_clock+0xa0>)
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000444:	2b00      	cmp	r3, #0
 8000446:	d0f9      	beq.n	800043c <config_clock+0x4c>

	// Switch system clock to PLL
	MODIFY_REG(RCC->CFGR,
 8000448:	4b11      	ldr	r3, [pc, #68]	; (8000490 <config_clock+0xa0>)
 800044a:	689b      	ldr	r3, [r3, #8]
 800044c:	f023 0303 	bic.w	r3, r3, #3
 8000450:	4a0f      	ldr	r2, [pc, #60]	; (8000490 <config_clock+0xa0>)
 8000452:	f043 0302 	orr.w	r3, r3, #2
 8000456:	6093      	str	r3, [r2, #8]
		RCC_CFGR_SW,
		_VAL2FLD(RCC_CFGR_SW, RCC_CFGR_SW_PLL)
	);

	//AHB, APB pre-scalars - Configure PPRE1 = 2, (PPRE2 = 1, HPRE = 1 by default)
	MODIFY_REG(RCC->CFGR,
 8000458:	4b0d      	ldr	r3, [pc, #52]	; (8000490 <config_clock+0xa0>)
 800045a:	689b      	ldr	r3, [r3, #8]
 800045c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000460:	4a0b      	ldr	r2, [pc, #44]	; (8000490 <config_clock+0xa0>)
 8000462:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000466:	6093      	str	r3, [r2, #8]
		RCC_CFGR_PPRE1,
		_VAL2FLD(RCC_CFGR_PPRE1, 4)
	);

	//Wait until PLL is used
	while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000468:	bf00      	nop
 800046a:	4b09      	ldr	r3, [pc, #36]	; (8000490 <config_clock+0xa0>)
 800046c:	689b      	ldr	r3, [r3, #8]
 800046e:	f003 030c 	and.w	r3, r3, #12
 8000472:	2b08      	cmp	r3, #8
 8000474:	d1f9      	bne.n	800046a <config_clock+0x7a>

	//Disable HSI - just to save power
	CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 8000476:	4b06      	ldr	r3, [pc, #24]	; (8000490 <config_clock+0xa0>)
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	4a05      	ldr	r2, [pc, #20]	; (8000490 <config_clock+0xa0>)
 800047c:	f023 0301 	bic.w	r3, r3, #1
 8000480:	6013      	str	r3, [r2, #0]
}
 8000482:	bf00      	nop
 8000484:	46bd      	mov	sp, r7
 8000486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048a:	4770      	bx	lr
 800048c:	40023c00 	.word	0x40023c00
 8000490:	40023800 	.word	0x40023800
 8000494:	f0bc8000 	.word	0xf0bc8000
 8000498:	03401204 	.word	0x03401204

0800049c <SystemInit>:

void SystemInit(void) {
 800049c:	b580      	push	{r7, lr}
 800049e:	af00      	add	r7, sp, #0
	config_clock();
 80004a0:	f7ff ffa6 	bl	80003f0 <config_clock>
}
 80004a4:	bf00      	nop
 80004a6:	bd80      	pop	{r7, pc}

080004a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004a8:	480d      	ldr	r0, [pc, #52]	; (80004e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004ac:	f7ff fff6 	bl	800049c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004b0:	480c      	ldr	r0, [pc, #48]	; (80004e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80004b2:	490d      	ldr	r1, [pc, #52]	; (80004e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004b4:	4a0d      	ldr	r2, [pc, #52]	; (80004ec <LoopForever+0xe>)
  movs r3, #0
 80004b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004b8:	e002      	b.n	80004c0 <LoopCopyDataInit>

080004ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004be:	3304      	adds	r3, #4

080004c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004c4:	d3f9      	bcc.n	80004ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004c6:	4a0a      	ldr	r2, [pc, #40]	; (80004f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004c8:	4c0a      	ldr	r4, [pc, #40]	; (80004f4 <LoopForever+0x16>)
  movs r3, #0
 80004ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004cc:	e001      	b.n	80004d2 <LoopFillZerobss>

080004ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004d0:	3204      	adds	r2, #4

080004d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004d4:	d3fb      	bcc.n	80004ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004d6:	f000 fcef 	bl	8000eb8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004da:	f7ff ff81 	bl	80003e0 <main>

080004de <LoopForever>:

LoopForever:
  b LoopForever
 80004de:	e7fe      	b.n	80004de <LoopForever>
  ldr   r0, =_estack
 80004e0:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80004e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004e8:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 80004ec:	080014f8 	.word	0x080014f8
  ldr r2, =_sbss
 80004f0:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 80004f4:	200001cc 	.word	0x200001cc

080004f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004f8:	e7fe      	b.n	80004f8 <ADC_IRQHandler>

080004fa <__sfputc_r>:
 80004fa:	6893      	ldr	r3, [r2, #8]
 80004fc:	3b01      	subs	r3, #1
 80004fe:	2b00      	cmp	r3, #0
 8000500:	b410      	push	{r4}
 8000502:	6093      	str	r3, [r2, #8]
 8000504:	da08      	bge.n	8000518 <__sfputc_r+0x1e>
 8000506:	6994      	ldr	r4, [r2, #24]
 8000508:	42a3      	cmp	r3, r4
 800050a:	db01      	blt.n	8000510 <__sfputc_r+0x16>
 800050c:	290a      	cmp	r1, #10
 800050e:	d103      	bne.n	8000518 <__sfputc_r+0x1e>
 8000510:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000514:	f000 bbed 	b.w	8000cf2 <__swbuf_r>
 8000518:	6813      	ldr	r3, [r2, #0]
 800051a:	1c58      	adds	r0, r3, #1
 800051c:	6010      	str	r0, [r2, #0]
 800051e:	7019      	strb	r1, [r3, #0]
 8000520:	4608      	mov	r0, r1
 8000522:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000526:	4770      	bx	lr

08000528 <__sfputs_r>:
 8000528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800052a:	4606      	mov	r6, r0
 800052c:	460f      	mov	r7, r1
 800052e:	4614      	mov	r4, r2
 8000530:	18d5      	adds	r5, r2, r3
 8000532:	42ac      	cmp	r4, r5
 8000534:	d101      	bne.n	800053a <__sfputs_r+0x12>
 8000536:	2000      	movs	r0, #0
 8000538:	e007      	b.n	800054a <__sfputs_r+0x22>
 800053a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800053e:	463a      	mov	r2, r7
 8000540:	4630      	mov	r0, r6
 8000542:	f7ff ffda 	bl	80004fa <__sfputc_r>
 8000546:	1c43      	adds	r3, r0, #1
 8000548:	d1f3      	bne.n	8000532 <__sfputs_r+0xa>
 800054a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800054c <_vfiprintf_r>:
 800054c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000550:	460d      	mov	r5, r1
 8000552:	b09d      	sub	sp, #116	; 0x74
 8000554:	4614      	mov	r4, r2
 8000556:	4698      	mov	r8, r3
 8000558:	4606      	mov	r6, r0
 800055a:	b118      	cbz	r0, 8000564 <_vfiprintf_r+0x18>
 800055c:	6a03      	ldr	r3, [r0, #32]
 800055e:	b90b      	cbnz	r3, 8000564 <_vfiprintf_r+0x18>
 8000560:	f000 fb34 	bl	8000bcc <__sinit>
 8000564:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000566:	07d9      	lsls	r1, r3, #31
 8000568:	d405      	bmi.n	8000576 <_vfiprintf_r+0x2a>
 800056a:	89ab      	ldrh	r3, [r5, #12]
 800056c:	059a      	lsls	r2, r3, #22
 800056e:	d402      	bmi.n	8000576 <_vfiprintf_r+0x2a>
 8000570:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000572:	f000 fcc6 	bl	8000f02 <__retarget_lock_acquire_recursive>
 8000576:	89ab      	ldrh	r3, [r5, #12]
 8000578:	071b      	lsls	r3, r3, #28
 800057a:	d501      	bpl.n	8000580 <_vfiprintf_r+0x34>
 800057c:	692b      	ldr	r3, [r5, #16]
 800057e:	b99b      	cbnz	r3, 80005a8 <_vfiprintf_r+0x5c>
 8000580:	4629      	mov	r1, r5
 8000582:	4630      	mov	r0, r6
 8000584:	f000 fbf2 	bl	8000d6c <__swsetup_r>
 8000588:	b170      	cbz	r0, 80005a8 <_vfiprintf_r+0x5c>
 800058a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800058c:	07dc      	lsls	r4, r3, #31
 800058e:	d504      	bpl.n	800059a <_vfiprintf_r+0x4e>
 8000590:	f04f 30ff 	mov.w	r0, #4294967295
 8000594:	b01d      	add	sp, #116	; 0x74
 8000596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800059a:	89ab      	ldrh	r3, [r5, #12]
 800059c:	0598      	lsls	r0, r3, #22
 800059e:	d4f7      	bmi.n	8000590 <_vfiprintf_r+0x44>
 80005a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80005a2:	f000 fcaf 	bl	8000f04 <__retarget_lock_release_recursive>
 80005a6:	e7f3      	b.n	8000590 <_vfiprintf_r+0x44>
 80005a8:	2300      	movs	r3, #0
 80005aa:	9309      	str	r3, [sp, #36]	; 0x24
 80005ac:	2320      	movs	r3, #32
 80005ae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80005b2:	f8cd 800c 	str.w	r8, [sp, #12]
 80005b6:	2330      	movs	r3, #48	; 0x30
 80005b8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 800076c <_vfiprintf_r+0x220>
 80005bc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80005c0:	f04f 0901 	mov.w	r9, #1
 80005c4:	4623      	mov	r3, r4
 80005c6:	469a      	mov	sl, r3
 80005c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80005cc:	b10a      	cbz	r2, 80005d2 <_vfiprintf_r+0x86>
 80005ce:	2a25      	cmp	r2, #37	; 0x25
 80005d0:	d1f9      	bne.n	80005c6 <_vfiprintf_r+0x7a>
 80005d2:	ebba 0b04 	subs.w	fp, sl, r4
 80005d6:	d00b      	beq.n	80005f0 <_vfiprintf_r+0xa4>
 80005d8:	465b      	mov	r3, fp
 80005da:	4622      	mov	r2, r4
 80005dc:	4629      	mov	r1, r5
 80005de:	4630      	mov	r0, r6
 80005e0:	f7ff ffa2 	bl	8000528 <__sfputs_r>
 80005e4:	3001      	adds	r0, #1
 80005e6:	f000 80a9 	beq.w	800073c <_vfiprintf_r+0x1f0>
 80005ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80005ec:	445a      	add	r2, fp
 80005ee:	9209      	str	r2, [sp, #36]	; 0x24
 80005f0:	f89a 3000 	ldrb.w	r3, [sl]
 80005f4:	2b00      	cmp	r3, #0
 80005f6:	f000 80a1 	beq.w	800073c <_vfiprintf_r+0x1f0>
 80005fa:	2300      	movs	r3, #0
 80005fc:	f04f 32ff 	mov.w	r2, #4294967295
 8000600:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000604:	f10a 0a01 	add.w	sl, sl, #1
 8000608:	9304      	str	r3, [sp, #16]
 800060a:	9307      	str	r3, [sp, #28]
 800060c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000610:	931a      	str	r3, [sp, #104]	; 0x68
 8000612:	4654      	mov	r4, sl
 8000614:	2205      	movs	r2, #5
 8000616:	f814 1b01 	ldrb.w	r1, [r4], #1
 800061a:	4854      	ldr	r0, [pc, #336]	; (800076c <_vfiprintf_r+0x220>)
 800061c:	f7ff fde8 	bl	80001f0 <memchr>
 8000620:	9a04      	ldr	r2, [sp, #16]
 8000622:	b9d8      	cbnz	r0, 800065c <_vfiprintf_r+0x110>
 8000624:	06d1      	lsls	r1, r2, #27
 8000626:	bf44      	itt	mi
 8000628:	2320      	movmi	r3, #32
 800062a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800062e:	0713      	lsls	r3, r2, #28
 8000630:	bf44      	itt	mi
 8000632:	232b      	movmi	r3, #43	; 0x2b
 8000634:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000638:	f89a 3000 	ldrb.w	r3, [sl]
 800063c:	2b2a      	cmp	r3, #42	; 0x2a
 800063e:	d015      	beq.n	800066c <_vfiprintf_r+0x120>
 8000640:	9a07      	ldr	r2, [sp, #28]
 8000642:	4654      	mov	r4, sl
 8000644:	2000      	movs	r0, #0
 8000646:	f04f 0c0a 	mov.w	ip, #10
 800064a:	4621      	mov	r1, r4
 800064c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000650:	3b30      	subs	r3, #48	; 0x30
 8000652:	2b09      	cmp	r3, #9
 8000654:	d94d      	bls.n	80006f2 <_vfiprintf_r+0x1a6>
 8000656:	b1b0      	cbz	r0, 8000686 <_vfiprintf_r+0x13a>
 8000658:	9207      	str	r2, [sp, #28]
 800065a:	e014      	b.n	8000686 <_vfiprintf_r+0x13a>
 800065c:	eba0 0308 	sub.w	r3, r0, r8
 8000660:	fa09 f303 	lsl.w	r3, r9, r3
 8000664:	4313      	orrs	r3, r2
 8000666:	9304      	str	r3, [sp, #16]
 8000668:	46a2      	mov	sl, r4
 800066a:	e7d2      	b.n	8000612 <_vfiprintf_r+0xc6>
 800066c:	9b03      	ldr	r3, [sp, #12]
 800066e:	1d19      	adds	r1, r3, #4
 8000670:	681b      	ldr	r3, [r3, #0]
 8000672:	9103      	str	r1, [sp, #12]
 8000674:	2b00      	cmp	r3, #0
 8000676:	bfbb      	ittet	lt
 8000678:	425b      	neglt	r3, r3
 800067a:	f042 0202 	orrlt.w	r2, r2, #2
 800067e:	9307      	strge	r3, [sp, #28]
 8000680:	9307      	strlt	r3, [sp, #28]
 8000682:	bfb8      	it	lt
 8000684:	9204      	strlt	r2, [sp, #16]
 8000686:	7823      	ldrb	r3, [r4, #0]
 8000688:	2b2e      	cmp	r3, #46	; 0x2e
 800068a:	d10c      	bne.n	80006a6 <_vfiprintf_r+0x15a>
 800068c:	7863      	ldrb	r3, [r4, #1]
 800068e:	2b2a      	cmp	r3, #42	; 0x2a
 8000690:	d134      	bne.n	80006fc <_vfiprintf_r+0x1b0>
 8000692:	9b03      	ldr	r3, [sp, #12]
 8000694:	1d1a      	adds	r2, r3, #4
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	9203      	str	r2, [sp, #12]
 800069a:	2b00      	cmp	r3, #0
 800069c:	bfb8      	it	lt
 800069e:	f04f 33ff 	movlt.w	r3, #4294967295
 80006a2:	3402      	adds	r4, #2
 80006a4:	9305      	str	r3, [sp, #20]
 80006a6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800077c <_vfiprintf_r+0x230>
 80006aa:	7821      	ldrb	r1, [r4, #0]
 80006ac:	2203      	movs	r2, #3
 80006ae:	4650      	mov	r0, sl
 80006b0:	f7ff fd9e 	bl	80001f0 <memchr>
 80006b4:	b138      	cbz	r0, 80006c6 <_vfiprintf_r+0x17a>
 80006b6:	9b04      	ldr	r3, [sp, #16]
 80006b8:	eba0 000a 	sub.w	r0, r0, sl
 80006bc:	2240      	movs	r2, #64	; 0x40
 80006be:	4082      	lsls	r2, r0
 80006c0:	4313      	orrs	r3, r2
 80006c2:	3401      	adds	r4, #1
 80006c4:	9304      	str	r3, [sp, #16]
 80006c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006ca:	4829      	ldr	r0, [pc, #164]	; (8000770 <_vfiprintf_r+0x224>)
 80006cc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80006d0:	2206      	movs	r2, #6
 80006d2:	f7ff fd8d 	bl	80001f0 <memchr>
 80006d6:	2800      	cmp	r0, #0
 80006d8:	d03f      	beq.n	800075a <_vfiprintf_r+0x20e>
 80006da:	4b26      	ldr	r3, [pc, #152]	; (8000774 <_vfiprintf_r+0x228>)
 80006dc:	bb1b      	cbnz	r3, 8000726 <_vfiprintf_r+0x1da>
 80006de:	9b03      	ldr	r3, [sp, #12]
 80006e0:	3307      	adds	r3, #7
 80006e2:	f023 0307 	bic.w	r3, r3, #7
 80006e6:	3308      	adds	r3, #8
 80006e8:	9303      	str	r3, [sp, #12]
 80006ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80006ec:	443b      	add	r3, r7
 80006ee:	9309      	str	r3, [sp, #36]	; 0x24
 80006f0:	e768      	b.n	80005c4 <_vfiprintf_r+0x78>
 80006f2:	fb0c 3202 	mla	r2, ip, r2, r3
 80006f6:	460c      	mov	r4, r1
 80006f8:	2001      	movs	r0, #1
 80006fa:	e7a6      	b.n	800064a <_vfiprintf_r+0xfe>
 80006fc:	2300      	movs	r3, #0
 80006fe:	3401      	adds	r4, #1
 8000700:	9305      	str	r3, [sp, #20]
 8000702:	4619      	mov	r1, r3
 8000704:	f04f 0c0a 	mov.w	ip, #10
 8000708:	4620      	mov	r0, r4
 800070a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800070e:	3a30      	subs	r2, #48	; 0x30
 8000710:	2a09      	cmp	r2, #9
 8000712:	d903      	bls.n	800071c <_vfiprintf_r+0x1d0>
 8000714:	2b00      	cmp	r3, #0
 8000716:	d0c6      	beq.n	80006a6 <_vfiprintf_r+0x15a>
 8000718:	9105      	str	r1, [sp, #20]
 800071a:	e7c4      	b.n	80006a6 <_vfiprintf_r+0x15a>
 800071c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000720:	4604      	mov	r4, r0
 8000722:	2301      	movs	r3, #1
 8000724:	e7f0      	b.n	8000708 <_vfiprintf_r+0x1bc>
 8000726:	ab03      	add	r3, sp, #12
 8000728:	9300      	str	r3, [sp, #0]
 800072a:	462a      	mov	r2, r5
 800072c:	4b12      	ldr	r3, [pc, #72]	; (8000778 <_vfiprintf_r+0x22c>)
 800072e:	a904      	add	r1, sp, #16
 8000730:	4630      	mov	r0, r6
 8000732:	f3af 8000 	nop.w
 8000736:	4607      	mov	r7, r0
 8000738:	1c78      	adds	r0, r7, #1
 800073a:	d1d6      	bne.n	80006ea <_vfiprintf_r+0x19e>
 800073c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800073e:	07d9      	lsls	r1, r3, #31
 8000740:	d405      	bmi.n	800074e <_vfiprintf_r+0x202>
 8000742:	89ab      	ldrh	r3, [r5, #12]
 8000744:	059a      	lsls	r2, r3, #22
 8000746:	d402      	bmi.n	800074e <_vfiprintf_r+0x202>
 8000748:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800074a:	f000 fbdb 	bl	8000f04 <__retarget_lock_release_recursive>
 800074e:	89ab      	ldrh	r3, [r5, #12]
 8000750:	065b      	lsls	r3, r3, #25
 8000752:	f53f af1d 	bmi.w	8000590 <_vfiprintf_r+0x44>
 8000756:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000758:	e71c      	b.n	8000594 <_vfiprintf_r+0x48>
 800075a:	ab03      	add	r3, sp, #12
 800075c:	9300      	str	r3, [sp, #0]
 800075e:	462a      	mov	r2, r5
 8000760:	4b05      	ldr	r3, [pc, #20]	; (8000778 <_vfiprintf_r+0x22c>)
 8000762:	a904      	add	r1, sp, #16
 8000764:	4630      	mov	r0, r6
 8000766:	f000 f883 	bl	8000870 <_printf_i>
 800076a:	e7e4      	b.n	8000736 <_vfiprintf_r+0x1ea>
 800076c:	080014bc 	.word	0x080014bc
 8000770:	080014c6 	.word	0x080014c6
 8000774:	00000000 	.word	0x00000000
 8000778:	08000529 	.word	0x08000529
 800077c:	080014c2 	.word	0x080014c2

08000780 <vfiprintf>:
 8000780:	4613      	mov	r3, r2
 8000782:	460a      	mov	r2, r1
 8000784:	4601      	mov	r1, r0
 8000786:	4802      	ldr	r0, [pc, #8]	; (8000790 <vfiprintf+0x10>)
 8000788:	6800      	ldr	r0, [r0, #0]
 800078a:	f7ff bedf 	b.w	800054c <_vfiprintf_r>
 800078e:	bf00      	nop
 8000790:	2000005c 	.word	0x2000005c

08000794 <_printf_common>:
 8000794:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000798:	4616      	mov	r6, r2
 800079a:	4699      	mov	r9, r3
 800079c:	688a      	ldr	r2, [r1, #8]
 800079e:	690b      	ldr	r3, [r1, #16]
 80007a0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80007a4:	4293      	cmp	r3, r2
 80007a6:	bfb8      	it	lt
 80007a8:	4613      	movlt	r3, r2
 80007aa:	6033      	str	r3, [r6, #0]
 80007ac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80007b0:	4607      	mov	r7, r0
 80007b2:	460c      	mov	r4, r1
 80007b4:	b10a      	cbz	r2, 80007ba <_printf_common+0x26>
 80007b6:	3301      	adds	r3, #1
 80007b8:	6033      	str	r3, [r6, #0]
 80007ba:	6823      	ldr	r3, [r4, #0]
 80007bc:	0699      	lsls	r1, r3, #26
 80007be:	bf42      	ittt	mi
 80007c0:	6833      	ldrmi	r3, [r6, #0]
 80007c2:	3302      	addmi	r3, #2
 80007c4:	6033      	strmi	r3, [r6, #0]
 80007c6:	6825      	ldr	r5, [r4, #0]
 80007c8:	f015 0506 	ands.w	r5, r5, #6
 80007cc:	d106      	bne.n	80007dc <_printf_common+0x48>
 80007ce:	f104 0a19 	add.w	sl, r4, #25
 80007d2:	68e3      	ldr	r3, [r4, #12]
 80007d4:	6832      	ldr	r2, [r6, #0]
 80007d6:	1a9b      	subs	r3, r3, r2
 80007d8:	42ab      	cmp	r3, r5
 80007da:	dc26      	bgt.n	800082a <_printf_common+0x96>
 80007dc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80007e0:	1e13      	subs	r3, r2, #0
 80007e2:	6822      	ldr	r2, [r4, #0]
 80007e4:	bf18      	it	ne
 80007e6:	2301      	movne	r3, #1
 80007e8:	0692      	lsls	r2, r2, #26
 80007ea:	d42b      	bmi.n	8000844 <_printf_common+0xb0>
 80007ec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80007f0:	4649      	mov	r1, r9
 80007f2:	4638      	mov	r0, r7
 80007f4:	47c0      	blx	r8
 80007f6:	3001      	adds	r0, #1
 80007f8:	d01e      	beq.n	8000838 <_printf_common+0xa4>
 80007fa:	6823      	ldr	r3, [r4, #0]
 80007fc:	6922      	ldr	r2, [r4, #16]
 80007fe:	f003 0306 	and.w	r3, r3, #6
 8000802:	2b04      	cmp	r3, #4
 8000804:	bf02      	ittt	eq
 8000806:	68e5      	ldreq	r5, [r4, #12]
 8000808:	6833      	ldreq	r3, [r6, #0]
 800080a:	1aed      	subeq	r5, r5, r3
 800080c:	68a3      	ldr	r3, [r4, #8]
 800080e:	bf0c      	ite	eq
 8000810:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000814:	2500      	movne	r5, #0
 8000816:	4293      	cmp	r3, r2
 8000818:	bfc4      	itt	gt
 800081a:	1a9b      	subgt	r3, r3, r2
 800081c:	18ed      	addgt	r5, r5, r3
 800081e:	2600      	movs	r6, #0
 8000820:	341a      	adds	r4, #26
 8000822:	42b5      	cmp	r5, r6
 8000824:	d11a      	bne.n	800085c <_printf_common+0xc8>
 8000826:	2000      	movs	r0, #0
 8000828:	e008      	b.n	800083c <_printf_common+0xa8>
 800082a:	2301      	movs	r3, #1
 800082c:	4652      	mov	r2, sl
 800082e:	4649      	mov	r1, r9
 8000830:	4638      	mov	r0, r7
 8000832:	47c0      	blx	r8
 8000834:	3001      	adds	r0, #1
 8000836:	d103      	bne.n	8000840 <_printf_common+0xac>
 8000838:	f04f 30ff 	mov.w	r0, #4294967295
 800083c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000840:	3501      	adds	r5, #1
 8000842:	e7c6      	b.n	80007d2 <_printf_common+0x3e>
 8000844:	18e1      	adds	r1, r4, r3
 8000846:	1c5a      	adds	r2, r3, #1
 8000848:	2030      	movs	r0, #48	; 0x30
 800084a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800084e:	4422      	add	r2, r4
 8000850:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000854:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000858:	3302      	adds	r3, #2
 800085a:	e7c7      	b.n	80007ec <_printf_common+0x58>
 800085c:	2301      	movs	r3, #1
 800085e:	4622      	mov	r2, r4
 8000860:	4649      	mov	r1, r9
 8000862:	4638      	mov	r0, r7
 8000864:	47c0      	blx	r8
 8000866:	3001      	adds	r0, #1
 8000868:	d0e6      	beq.n	8000838 <_printf_common+0xa4>
 800086a:	3601      	adds	r6, #1
 800086c:	e7d9      	b.n	8000822 <_printf_common+0x8e>
	...

08000870 <_printf_i>:
 8000870:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000874:	7e0f      	ldrb	r7, [r1, #24]
 8000876:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000878:	2f78      	cmp	r7, #120	; 0x78
 800087a:	4691      	mov	r9, r2
 800087c:	4680      	mov	r8, r0
 800087e:	460c      	mov	r4, r1
 8000880:	469a      	mov	sl, r3
 8000882:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000886:	d807      	bhi.n	8000898 <_printf_i+0x28>
 8000888:	2f62      	cmp	r7, #98	; 0x62
 800088a:	d80a      	bhi.n	80008a2 <_printf_i+0x32>
 800088c:	2f00      	cmp	r7, #0
 800088e:	f000 80d4 	beq.w	8000a3a <_printf_i+0x1ca>
 8000892:	2f58      	cmp	r7, #88	; 0x58
 8000894:	f000 80c0 	beq.w	8000a18 <_printf_i+0x1a8>
 8000898:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800089c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80008a0:	e03a      	b.n	8000918 <_printf_i+0xa8>
 80008a2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80008a6:	2b15      	cmp	r3, #21
 80008a8:	d8f6      	bhi.n	8000898 <_printf_i+0x28>
 80008aa:	a101      	add	r1, pc, #4	; (adr r1, 80008b0 <_printf_i+0x40>)
 80008ac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80008b0:	08000909 	.word	0x08000909
 80008b4:	0800091d 	.word	0x0800091d
 80008b8:	08000899 	.word	0x08000899
 80008bc:	08000899 	.word	0x08000899
 80008c0:	08000899 	.word	0x08000899
 80008c4:	08000899 	.word	0x08000899
 80008c8:	0800091d 	.word	0x0800091d
 80008cc:	08000899 	.word	0x08000899
 80008d0:	08000899 	.word	0x08000899
 80008d4:	08000899 	.word	0x08000899
 80008d8:	08000899 	.word	0x08000899
 80008dc:	08000a21 	.word	0x08000a21
 80008e0:	08000949 	.word	0x08000949
 80008e4:	080009db 	.word	0x080009db
 80008e8:	08000899 	.word	0x08000899
 80008ec:	08000899 	.word	0x08000899
 80008f0:	08000a43 	.word	0x08000a43
 80008f4:	08000899 	.word	0x08000899
 80008f8:	08000949 	.word	0x08000949
 80008fc:	08000899 	.word	0x08000899
 8000900:	08000899 	.word	0x08000899
 8000904:	080009e3 	.word	0x080009e3
 8000908:	682b      	ldr	r3, [r5, #0]
 800090a:	1d1a      	adds	r2, r3, #4
 800090c:	681b      	ldr	r3, [r3, #0]
 800090e:	602a      	str	r2, [r5, #0]
 8000910:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000914:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000918:	2301      	movs	r3, #1
 800091a:	e09f      	b.n	8000a5c <_printf_i+0x1ec>
 800091c:	6820      	ldr	r0, [r4, #0]
 800091e:	682b      	ldr	r3, [r5, #0]
 8000920:	0607      	lsls	r7, r0, #24
 8000922:	f103 0104 	add.w	r1, r3, #4
 8000926:	6029      	str	r1, [r5, #0]
 8000928:	d501      	bpl.n	800092e <_printf_i+0xbe>
 800092a:	681e      	ldr	r6, [r3, #0]
 800092c:	e003      	b.n	8000936 <_printf_i+0xc6>
 800092e:	0646      	lsls	r6, r0, #25
 8000930:	d5fb      	bpl.n	800092a <_printf_i+0xba>
 8000932:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000936:	2e00      	cmp	r6, #0
 8000938:	da03      	bge.n	8000942 <_printf_i+0xd2>
 800093a:	232d      	movs	r3, #45	; 0x2d
 800093c:	4276      	negs	r6, r6
 800093e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000942:	485a      	ldr	r0, [pc, #360]	; (8000aac <_printf_i+0x23c>)
 8000944:	230a      	movs	r3, #10
 8000946:	e012      	b.n	800096e <_printf_i+0xfe>
 8000948:	682b      	ldr	r3, [r5, #0]
 800094a:	6820      	ldr	r0, [r4, #0]
 800094c:	1d19      	adds	r1, r3, #4
 800094e:	6029      	str	r1, [r5, #0]
 8000950:	0605      	lsls	r5, r0, #24
 8000952:	d501      	bpl.n	8000958 <_printf_i+0xe8>
 8000954:	681e      	ldr	r6, [r3, #0]
 8000956:	e002      	b.n	800095e <_printf_i+0xee>
 8000958:	0641      	lsls	r1, r0, #25
 800095a:	d5fb      	bpl.n	8000954 <_printf_i+0xe4>
 800095c:	881e      	ldrh	r6, [r3, #0]
 800095e:	4853      	ldr	r0, [pc, #332]	; (8000aac <_printf_i+0x23c>)
 8000960:	2f6f      	cmp	r7, #111	; 0x6f
 8000962:	bf0c      	ite	eq
 8000964:	2308      	moveq	r3, #8
 8000966:	230a      	movne	r3, #10
 8000968:	2100      	movs	r1, #0
 800096a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800096e:	6865      	ldr	r5, [r4, #4]
 8000970:	60a5      	str	r5, [r4, #8]
 8000972:	2d00      	cmp	r5, #0
 8000974:	bfa2      	ittt	ge
 8000976:	6821      	ldrge	r1, [r4, #0]
 8000978:	f021 0104 	bicge.w	r1, r1, #4
 800097c:	6021      	strge	r1, [r4, #0]
 800097e:	b90e      	cbnz	r6, 8000984 <_printf_i+0x114>
 8000980:	2d00      	cmp	r5, #0
 8000982:	d04b      	beq.n	8000a1c <_printf_i+0x1ac>
 8000984:	4615      	mov	r5, r2
 8000986:	fbb6 f1f3 	udiv	r1, r6, r3
 800098a:	fb03 6711 	mls	r7, r3, r1, r6
 800098e:	5dc7      	ldrb	r7, [r0, r7]
 8000990:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000994:	4637      	mov	r7, r6
 8000996:	42bb      	cmp	r3, r7
 8000998:	460e      	mov	r6, r1
 800099a:	d9f4      	bls.n	8000986 <_printf_i+0x116>
 800099c:	2b08      	cmp	r3, #8
 800099e:	d10b      	bne.n	80009b8 <_printf_i+0x148>
 80009a0:	6823      	ldr	r3, [r4, #0]
 80009a2:	07de      	lsls	r6, r3, #31
 80009a4:	d508      	bpl.n	80009b8 <_printf_i+0x148>
 80009a6:	6923      	ldr	r3, [r4, #16]
 80009a8:	6861      	ldr	r1, [r4, #4]
 80009aa:	4299      	cmp	r1, r3
 80009ac:	bfde      	ittt	le
 80009ae:	2330      	movle	r3, #48	; 0x30
 80009b0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80009b4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80009b8:	1b52      	subs	r2, r2, r5
 80009ba:	6122      	str	r2, [r4, #16]
 80009bc:	f8cd a000 	str.w	sl, [sp]
 80009c0:	464b      	mov	r3, r9
 80009c2:	aa03      	add	r2, sp, #12
 80009c4:	4621      	mov	r1, r4
 80009c6:	4640      	mov	r0, r8
 80009c8:	f7ff fee4 	bl	8000794 <_printf_common>
 80009cc:	3001      	adds	r0, #1
 80009ce:	d14a      	bne.n	8000a66 <_printf_i+0x1f6>
 80009d0:	f04f 30ff 	mov.w	r0, #4294967295
 80009d4:	b004      	add	sp, #16
 80009d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009da:	6823      	ldr	r3, [r4, #0]
 80009dc:	f043 0320 	orr.w	r3, r3, #32
 80009e0:	6023      	str	r3, [r4, #0]
 80009e2:	4833      	ldr	r0, [pc, #204]	; (8000ab0 <_printf_i+0x240>)
 80009e4:	2778      	movs	r7, #120	; 0x78
 80009e6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80009ea:	6823      	ldr	r3, [r4, #0]
 80009ec:	6829      	ldr	r1, [r5, #0]
 80009ee:	061f      	lsls	r7, r3, #24
 80009f0:	f851 6b04 	ldr.w	r6, [r1], #4
 80009f4:	d402      	bmi.n	80009fc <_printf_i+0x18c>
 80009f6:	065f      	lsls	r7, r3, #25
 80009f8:	bf48      	it	mi
 80009fa:	b2b6      	uxthmi	r6, r6
 80009fc:	07df      	lsls	r7, r3, #31
 80009fe:	bf48      	it	mi
 8000a00:	f043 0320 	orrmi.w	r3, r3, #32
 8000a04:	6029      	str	r1, [r5, #0]
 8000a06:	bf48      	it	mi
 8000a08:	6023      	strmi	r3, [r4, #0]
 8000a0a:	b91e      	cbnz	r6, 8000a14 <_printf_i+0x1a4>
 8000a0c:	6823      	ldr	r3, [r4, #0]
 8000a0e:	f023 0320 	bic.w	r3, r3, #32
 8000a12:	6023      	str	r3, [r4, #0]
 8000a14:	2310      	movs	r3, #16
 8000a16:	e7a7      	b.n	8000968 <_printf_i+0xf8>
 8000a18:	4824      	ldr	r0, [pc, #144]	; (8000aac <_printf_i+0x23c>)
 8000a1a:	e7e4      	b.n	80009e6 <_printf_i+0x176>
 8000a1c:	4615      	mov	r5, r2
 8000a1e:	e7bd      	b.n	800099c <_printf_i+0x12c>
 8000a20:	682b      	ldr	r3, [r5, #0]
 8000a22:	6826      	ldr	r6, [r4, #0]
 8000a24:	6961      	ldr	r1, [r4, #20]
 8000a26:	1d18      	adds	r0, r3, #4
 8000a28:	6028      	str	r0, [r5, #0]
 8000a2a:	0635      	lsls	r5, r6, #24
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	d501      	bpl.n	8000a34 <_printf_i+0x1c4>
 8000a30:	6019      	str	r1, [r3, #0]
 8000a32:	e002      	b.n	8000a3a <_printf_i+0x1ca>
 8000a34:	0670      	lsls	r0, r6, #25
 8000a36:	d5fb      	bpl.n	8000a30 <_printf_i+0x1c0>
 8000a38:	8019      	strh	r1, [r3, #0]
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	6123      	str	r3, [r4, #16]
 8000a3e:	4615      	mov	r5, r2
 8000a40:	e7bc      	b.n	80009bc <_printf_i+0x14c>
 8000a42:	682b      	ldr	r3, [r5, #0]
 8000a44:	1d1a      	adds	r2, r3, #4
 8000a46:	602a      	str	r2, [r5, #0]
 8000a48:	681d      	ldr	r5, [r3, #0]
 8000a4a:	6862      	ldr	r2, [r4, #4]
 8000a4c:	2100      	movs	r1, #0
 8000a4e:	4628      	mov	r0, r5
 8000a50:	f7ff fbce 	bl	80001f0 <memchr>
 8000a54:	b108      	cbz	r0, 8000a5a <_printf_i+0x1ea>
 8000a56:	1b40      	subs	r0, r0, r5
 8000a58:	6060      	str	r0, [r4, #4]
 8000a5a:	6863      	ldr	r3, [r4, #4]
 8000a5c:	6123      	str	r3, [r4, #16]
 8000a5e:	2300      	movs	r3, #0
 8000a60:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000a64:	e7aa      	b.n	80009bc <_printf_i+0x14c>
 8000a66:	6923      	ldr	r3, [r4, #16]
 8000a68:	462a      	mov	r2, r5
 8000a6a:	4649      	mov	r1, r9
 8000a6c:	4640      	mov	r0, r8
 8000a6e:	47d0      	blx	sl
 8000a70:	3001      	adds	r0, #1
 8000a72:	d0ad      	beq.n	80009d0 <_printf_i+0x160>
 8000a74:	6823      	ldr	r3, [r4, #0]
 8000a76:	079b      	lsls	r3, r3, #30
 8000a78:	d413      	bmi.n	8000aa2 <_printf_i+0x232>
 8000a7a:	68e0      	ldr	r0, [r4, #12]
 8000a7c:	9b03      	ldr	r3, [sp, #12]
 8000a7e:	4298      	cmp	r0, r3
 8000a80:	bfb8      	it	lt
 8000a82:	4618      	movlt	r0, r3
 8000a84:	e7a6      	b.n	80009d4 <_printf_i+0x164>
 8000a86:	2301      	movs	r3, #1
 8000a88:	4632      	mov	r2, r6
 8000a8a:	4649      	mov	r1, r9
 8000a8c:	4640      	mov	r0, r8
 8000a8e:	47d0      	blx	sl
 8000a90:	3001      	adds	r0, #1
 8000a92:	d09d      	beq.n	80009d0 <_printf_i+0x160>
 8000a94:	3501      	adds	r5, #1
 8000a96:	68e3      	ldr	r3, [r4, #12]
 8000a98:	9903      	ldr	r1, [sp, #12]
 8000a9a:	1a5b      	subs	r3, r3, r1
 8000a9c:	42ab      	cmp	r3, r5
 8000a9e:	dcf2      	bgt.n	8000a86 <_printf_i+0x216>
 8000aa0:	e7eb      	b.n	8000a7a <_printf_i+0x20a>
 8000aa2:	2500      	movs	r5, #0
 8000aa4:	f104 0619 	add.w	r6, r4, #25
 8000aa8:	e7f5      	b.n	8000a96 <_printf_i+0x226>
 8000aaa:	bf00      	nop
 8000aac:	080014cd 	.word	0x080014cd
 8000ab0:	080014de 	.word	0x080014de

08000ab4 <std>:
 8000ab4:	2300      	movs	r3, #0
 8000ab6:	b510      	push	{r4, lr}
 8000ab8:	4604      	mov	r4, r0
 8000aba:	e9c0 3300 	strd	r3, r3, [r0]
 8000abe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ac2:	6083      	str	r3, [r0, #8]
 8000ac4:	8181      	strh	r1, [r0, #12]
 8000ac6:	6643      	str	r3, [r0, #100]	; 0x64
 8000ac8:	81c2      	strh	r2, [r0, #14]
 8000aca:	6183      	str	r3, [r0, #24]
 8000acc:	4619      	mov	r1, r3
 8000ace:	2208      	movs	r2, #8
 8000ad0:	305c      	adds	r0, #92	; 0x5c
 8000ad2:	f000 f9a3 	bl	8000e1c <memset>
 8000ad6:	4b0d      	ldr	r3, [pc, #52]	; (8000b0c <std+0x58>)
 8000ad8:	6263      	str	r3, [r4, #36]	; 0x24
 8000ada:	4b0d      	ldr	r3, [pc, #52]	; (8000b10 <std+0x5c>)
 8000adc:	62a3      	str	r3, [r4, #40]	; 0x28
 8000ade:	4b0d      	ldr	r3, [pc, #52]	; (8000b14 <std+0x60>)
 8000ae0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ae2:	4b0d      	ldr	r3, [pc, #52]	; (8000b18 <std+0x64>)
 8000ae4:	6323      	str	r3, [r4, #48]	; 0x30
 8000ae6:	4b0d      	ldr	r3, [pc, #52]	; (8000b1c <std+0x68>)
 8000ae8:	6224      	str	r4, [r4, #32]
 8000aea:	429c      	cmp	r4, r3
 8000aec:	d006      	beq.n	8000afc <std+0x48>
 8000aee:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000af2:	4294      	cmp	r4, r2
 8000af4:	d002      	beq.n	8000afc <std+0x48>
 8000af6:	33d0      	adds	r3, #208	; 0xd0
 8000af8:	429c      	cmp	r4, r3
 8000afa:	d105      	bne.n	8000b08 <std+0x54>
 8000afc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b04:	f000 b9fc 	b.w	8000f00 <__retarget_lock_init_recursive>
 8000b08:	bd10      	pop	{r4, pc}
 8000b0a:	bf00      	nop
 8000b0c:	08000c6d 	.word	0x08000c6d
 8000b10:	08000c8f 	.word	0x08000c8f
 8000b14:	08000cc7 	.word	0x08000cc7
 8000b18:	08000ceb 	.word	0x08000ceb
 8000b1c:	2000007c 	.word	0x2000007c

08000b20 <stdio_exit_handler>:
 8000b20:	4a02      	ldr	r2, [pc, #8]	; (8000b2c <stdio_exit_handler+0xc>)
 8000b22:	4903      	ldr	r1, [pc, #12]	; (8000b30 <stdio_exit_handler+0x10>)
 8000b24:	4803      	ldr	r0, [pc, #12]	; (8000b34 <stdio_exit_handler+0x14>)
 8000b26:	f000 b869 	b.w	8000bfc <_fwalk_sglue>
 8000b2a:	bf00      	nop
 8000b2c:	20000004 	.word	0x20000004
 8000b30:	08001205 	.word	0x08001205
 8000b34:	20000010 	.word	0x20000010

08000b38 <cleanup_stdio>:
 8000b38:	6841      	ldr	r1, [r0, #4]
 8000b3a:	4b0c      	ldr	r3, [pc, #48]	; (8000b6c <cleanup_stdio+0x34>)
 8000b3c:	4299      	cmp	r1, r3
 8000b3e:	b510      	push	{r4, lr}
 8000b40:	4604      	mov	r4, r0
 8000b42:	d001      	beq.n	8000b48 <cleanup_stdio+0x10>
 8000b44:	f000 fb5e 	bl	8001204 <_fflush_r>
 8000b48:	68a1      	ldr	r1, [r4, #8]
 8000b4a:	4b09      	ldr	r3, [pc, #36]	; (8000b70 <cleanup_stdio+0x38>)
 8000b4c:	4299      	cmp	r1, r3
 8000b4e:	d002      	beq.n	8000b56 <cleanup_stdio+0x1e>
 8000b50:	4620      	mov	r0, r4
 8000b52:	f000 fb57 	bl	8001204 <_fflush_r>
 8000b56:	68e1      	ldr	r1, [r4, #12]
 8000b58:	4b06      	ldr	r3, [pc, #24]	; (8000b74 <cleanup_stdio+0x3c>)
 8000b5a:	4299      	cmp	r1, r3
 8000b5c:	d004      	beq.n	8000b68 <cleanup_stdio+0x30>
 8000b5e:	4620      	mov	r0, r4
 8000b60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b64:	f000 bb4e 	b.w	8001204 <_fflush_r>
 8000b68:	bd10      	pop	{r4, pc}
 8000b6a:	bf00      	nop
 8000b6c:	2000007c 	.word	0x2000007c
 8000b70:	200000e4 	.word	0x200000e4
 8000b74:	2000014c 	.word	0x2000014c

08000b78 <global_stdio_init.part.0>:
 8000b78:	b510      	push	{r4, lr}
 8000b7a:	4b0b      	ldr	r3, [pc, #44]	; (8000ba8 <global_stdio_init.part.0+0x30>)
 8000b7c:	4c0b      	ldr	r4, [pc, #44]	; (8000bac <global_stdio_init.part.0+0x34>)
 8000b7e:	4a0c      	ldr	r2, [pc, #48]	; (8000bb0 <global_stdio_init.part.0+0x38>)
 8000b80:	601a      	str	r2, [r3, #0]
 8000b82:	4620      	mov	r0, r4
 8000b84:	2200      	movs	r2, #0
 8000b86:	2104      	movs	r1, #4
 8000b88:	f7ff ff94 	bl	8000ab4 <std>
 8000b8c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000b90:	2201      	movs	r2, #1
 8000b92:	2109      	movs	r1, #9
 8000b94:	f7ff ff8e 	bl	8000ab4 <std>
 8000b98:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000b9c:	2202      	movs	r2, #2
 8000b9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000ba2:	2112      	movs	r1, #18
 8000ba4:	f7ff bf86 	b.w	8000ab4 <std>
 8000ba8:	200001b4 	.word	0x200001b4
 8000bac:	2000007c 	.word	0x2000007c
 8000bb0:	08000b21 	.word	0x08000b21

08000bb4 <__sfp_lock_acquire>:
 8000bb4:	4801      	ldr	r0, [pc, #4]	; (8000bbc <__sfp_lock_acquire+0x8>)
 8000bb6:	f000 b9a4 	b.w	8000f02 <__retarget_lock_acquire_recursive>
 8000bba:	bf00      	nop
 8000bbc:	200001bd 	.word	0x200001bd

08000bc0 <__sfp_lock_release>:
 8000bc0:	4801      	ldr	r0, [pc, #4]	; (8000bc8 <__sfp_lock_release+0x8>)
 8000bc2:	f000 b99f 	b.w	8000f04 <__retarget_lock_release_recursive>
 8000bc6:	bf00      	nop
 8000bc8:	200001bd 	.word	0x200001bd

08000bcc <__sinit>:
 8000bcc:	b510      	push	{r4, lr}
 8000bce:	4604      	mov	r4, r0
 8000bd0:	f7ff fff0 	bl	8000bb4 <__sfp_lock_acquire>
 8000bd4:	6a23      	ldr	r3, [r4, #32]
 8000bd6:	b11b      	cbz	r3, 8000be0 <__sinit+0x14>
 8000bd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bdc:	f7ff bff0 	b.w	8000bc0 <__sfp_lock_release>
 8000be0:	4b04      	ldr	r3, [pc, #16]	; (8000bf4 <__sinit+0x28>)
 8000be2:	6223      	str	r3, [r4, #32]
 8000be4:	4b04      	ldr	r3, [pc, #16]	; (8000bf8 <__sinit+0x2c>)
 8000be6:	681b      	ldr	r3, [r3, #0]
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d1f5      	bne.n	8000bd8 <__sinit+0xc>
 8000bec:	f7ff ffc4 	bl	8000b78 <global_stdio_init.part.0>
 8000bf0:	e7f2      	b.n	8000bd8 <__sinit+0xc>
 8000bf2:	bf00      	nop
 8000bf4:	08000b39 	.word	0x08000b39
 8000bf8:	200001b4 	.word	0x200001b4

08000bfc <_fwalk_sglue>:
 8000bfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c00:	4607      	mov	r7, r0
 8000c02:	4688      	mov	r8, r1
 8000c04:	4614      	mov	r4, r2
 8000c06:	2600      	movs	r6, #0
 8000c08:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c0c:	f1b9 0901 	subs.w	r9, r9, #1
 8000c10:	d505      	bpl.n	8000c1e <_fwalk_sglue+0x22>
 8000c12:	6824      	ldr	r4, [r4, #0]
 8000c14:	2c00      	cmp	r4, #0
 8000c16:	d1f7      	bne.n	8000c08 <_fwalk_sglue+0xc>
 8000c18:	4630      	mov	r0, r6
 8000c1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c1e:	89ab      	ldrh	r3, [r5, #12]
 8000c20:	2b01      	cmp	r3, #1
 8000c22:	d907      	bls.n	8000c34 <_fwalk_sglue+0x38>
 8000c24:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c28:	3301      	adds	r3, #1
 8000c2a:	d003      	beq.n	8000c34 <_fwalk_sglue+0x38>
 8000c2c:	4629      	mov	r1, r5
 8000c2e:	4638      	mov	r0, r7
 8000c30:	47c0      	blx	r8
 8000c32:	4306      	orrs	r6, r0
 8000c34:	3568      	adds	r5, #104	; 0x68
 8000c36:	e7e9      	b.n	8000c0c <_fwalk_sglue+0x10>

08000c38 <iprintf>:
 8000c38:	b40f      	push	{r0, r1, r2, r3}
 8000c3a:	b507      	push	{r0, r1, r2, lr}
 8000c3c:	4906      	ldr	r1, [pc, #24]	; (8000c58 <iprintf+0x20>)
 8000c3e:	ab04      	add	r3, sp, #16
 8000c40:	6808      	ldr	r0, [r1, #0]
 8000c42:	f853 2b04 	ldr.w	r2, [r3], #4
 8000c46:	6881      	ldr	r1, [r0, #8]
 8000c48:	9301      	str	r3, [sp, #4]
 8000c4a:	f7ff fc7f 	bl	800054c <_vfiprintf_r>
 8000c4e:	b003      	add	sp, #12
 8000c50:	f85d eb04 	ldr.w	lr, [sp], #4
 8000c54:	b004      	add	sp, #16
 8000c56:	4770      	bx	lr
 8000c58:	2000005c 	.word	0x2000005c

08000c5c <putchar>:
 8000c5c:	4b02      	ldr	r3, [pc, #8]	; (8000c68 <putchar+0xc>)
 8000c5e:	4601      	mov	r1, r0
 8000c60:	6818      	ldr	r0, [r3, #0]
 8000c62:	6882      	ldr	r2, [r0, #8]
 8000c64:	f000 bb58 	b.w	8001318 <_putc_r>
 8000c68:	2000005c 	.word	0x2000005c

08000c6c <__sread>:
 8000c6c:	b510      	push	{r4, lr}
 8000c6e:	460c      	mov	r4, r1
 8000c70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c74:	f000 f8fc 	bl	8000e70 <_read_r>
 8000c78:	2800      	cmp	r0, #0
 8000c7a:	bfab      	itete	ge
 8000c7c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c7e:	89a3      	ldrhlt	r3, [r4, #12]
 8000c80:	181b      	addge	r3, r3, r0
 8000c82:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c86:	bfac      	ite	ge
 8000c88:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c8a:	81a3      	strhlt	r3, [r4, #12]
 8000c8c:	bd10      	pop	{r4, pc}

08000c8e <__swrite>:
 8000c8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c92:	461f      	mov	r7, r3
 8000c94:	898b      	ldrh	r3, [r1, #12]
 8000c96:	05db      	lsls	r3, r3, #23
 8000c98:	4605      	mov	r5, r0
 8000c9a:	460c      	mov	r4, r1
 8000c9c:	4616      	mov	r6, r2
 8000c9e:	d505      	bpl.n	8000cac <__swrite+0x1e>
 8000ca0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ca4:	2302      	movs	r3, #2
 8000ca6:	2200      	movs	r2, #0
 8000ca8:	f000 f8d0 	bl	8000e4c <_lseek_r>
 8000cac:	89a3      	ldrh	r3, [r4, #12]
 8000cae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cb2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000cb6:	81a3      	strh	r3, [r4, #12]
 8000cb8:	4632      	mov	r2, r6
 8000cba:	463b      	mov	r3, r7
 8000cbc:	4628      	mov	r0, r5
 8000cbe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cc2:	f000 b8e7 	b.w	8000e94 <_write_r>

08000cc6 <__sseek>:
 8000cc6:	b510      	push	{r4, lr}
 8000cc8:	460c      	mov	r4, r1
 8000cca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cce:	f000 f8bd 	bl	8000e4c <_lseek_r>
 8000cd2:	1c43      	adds	r3, r0, #1
 8000cd4:	89a3      	ldrh	r3, [r4, #12]
 8000cd6:	bf15      	itete	ne
 8000cd8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cda:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cde:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000ce2:	81a3      	strheq	r3, [r4, #12]
 8000ce4:	bf18      	it	ne
 8000ce6:	81a3      	strhne	r3, [r4, #12]
 8000ce8:	bd10      	pop	{r4, pc}

08000cea <__sclose>:
 8000cea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cee:	f000 b89d 	b.w	8000e2c <_close_r>

08000cf2 <__swbuf_r>:
 8000cf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cf4:	460e      	mov	r6, r1
 8000cf6:	4614      	mov	r4, r2
 8000cf8:	4605      	mov	r5, r0
 8000cfa:	b118      	cbz	r0, 8000d04 <__swbuf_r+0x12>
 8000cfc:	6a03      	ldr	r3, [r0, #32]
 8000cfe:	b90b      	cbnz	r3, 8000d04 <__swbuf_r+0x12>
 8000d00:	f7ff ff64 	bl	8000bcc <__sinit>
 8000d04:	69a3      	ldr	r3, [r4, #24]
 8000d06:	60a3      	str	r3, [r4, #8]
 8000d08:	89a3      	ldrh	r3, [r4, #12]
 8000d0a:	071a      	lsls	r2, r3, #28
 8000d0c:	d525      	bpl.n	8000d5a <__swbuf_r+0x68>
 8000d0e:	6923      	ldr	r3, [r4, #16]
 8000d10:	b31b      	cbz	r3, 8000d5a <__swbuf_r+0x68>
 8000d12:	6823      	ldr	r3, [r4, #0]
 8000d14:	6922      	ldr	r2, [r4, #16]
 8000d16:	1a98      	subs	r0, r3, r2
 8000d18:	6963      	ldr	r3, [r4, #20]
 8000d1a:	b2f6      	uxtb	r6, r6
 8000d1c:	4283      	cmp	r3, r0
 8000d1e:	4637      	mov	r7, r6
 8000d20:	dc04      	bgt.n	8000d2c <__swbuf_r+0x3a>
 8000d22:	4621      	mov	r1, r4
 8000d24:	4628      	mov	r0, r5
 8000d26:	f000 fa6d 	bl	8001204 <_fflush_r>
 8000d2a:	b9e0      	cbnz	r0, 8000d66 <__swbuf_r+0x74>
 8000d2c:	68a3      	ldr	r3, [r4, #8]
 8000d2e:	3b01      	subs	r3, #1
 8000d30:	60a3      	str	r3, [r4, #8]
 8000d32:	6823      	ldr	r3, [r4, #0]
 8000d34:	1c5a      	adds	r2, r3, #1
 8000d36:	6022      	str	r2, [r4, #0]
 8000d38:	701e      	strb	r6, [r3, #0]
 8000d3a:	6962      	ldr	r2, [r4, #20]
 8000d3c:	1c43      	adds	r3, r0, #1
 8000d3e:	429a      	cmp	r2, r3
 8000d40:	d004      	beq.n	8000d4c <__swbuf_r+0x5a>
 8000d42:	89a3      	ldrh	r3, [r4, #12]
 8000d44:	07db      	lsls	r3, r3, #31
 8000d46:	d506      	bpl.n	8000d56 <__swbuf_r+0x64>
 8000d48:	2e0a      	cmp	r6, #10
 8000d4a:	d104      	bne.n	8000d56 <__swbuf_r+0x64>
 8000d4c:	4621      	mov	r1, r4
 8000d4e:	4628      	mov	r0, r5
 8000d50:	f000 fa58 	bl	8001204 <_fflush_r>
 8000d54:	b938      	cbnz	r0, 8000d66 <__swbuf_r+0x74>
 8000d56:	4638      	mov	r0, r7
 8000d58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d5a:	4621      	mov	r1, r4
 8000d5c:	4628      	mov	r0, r5
 8000d5e:	f000 f805 	bl	8000d6c <__swsetup_r>
 8000d62:	2800      	cmp	r0, #0
 8000d64:	d0d5      	beq.n	8000d12 <__swbuf_r+0x20>
 8000d66:	f04f 37ff 	mov.w	r7, #4294967295
 8000d6a:	e7f4      	b.n	8000d56 <__swbuf_r+0x64>

08000d6c <__swsetup_r>:
 8000d6c:	b538      	push	{r3, r4, r5, lr}
 8000d6e:	4b2a      	ldr	r3, [pc, #168]	; (8000e18 <__swsetup_r+0xac>)
 8000d70:	4605      	mov	r5, r0
 8000d72:	6818      	ldr	r0, [r3, #0]
 8000d74:	460c      	mov	r4, r1
 8000d76:	b118      	cbz	r0, 8000d80 <__swsetup_r+0x14>
 8000d78:	6a03      	ldr	r3, [r0, #32]
 8000d7a:	b90b      	cbnz	r3, 8000d80 <__swsetup_r+0x14>
 8000d7c:	f7ff ff26 	bl	8000bcc <__sinit>
 8000d80:	89a3      	ldrh	r3, [r4, #12]
 8000d82:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000d86:	0718      	lsls	r0, r3, #28
 8000d88:	d422      	bmi.n	8000dd0 <__swsetup_r+0x64>
 8000d8a:	06d9      	lsls	r1, r3, #27
 8000d8c:	d407      	bmi.n	8000d9e <__swsetup_r+0x32>
 8000d8e:	2309      	movs	r3, #9
 8000d90:	602b      	str	r3, [r5, #0]
 8000d92:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000d96:	81a3      	strh	r3, [r4, #12]
 8000d98:	f04f 30ff 	mov.w	r0, #4294967295
 8000d9c:	e034      	b.n	8000e08 <__swsetup_r+0x9c>
 8000d9e:	0758      	lsls	r0, r3, #29
 8000da0:	d512      	bpl.n	8000dc8 <__swsetup_r+0x5c>
 8000da2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000da4:	b141      	cbz	r1, 8000db8 <__swsetup_r+0x4c>
 8000da6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000daa:	4299      	cmp	r1, r3
 8000dac:	d002      	beq.n	8000db4 <__swsetup_r+0x48>
 8000dae:	4628      	mov	r0, r5
 8000db0:	f000 f8aa 	bl	8000f08 <_free_r>
 8000db4:	2300      	movs	r3, #0
 8000db6:	6363      	str	r3, [r4, #52]	; 0x34
 8000db8:	89a3      	ldrh	r3, [r4, #12]
 8000dba:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000dbe:	81a3      	strh	r3, [r4, #12]
 8000dc0:	2300      	movs	r3, #0
 8000dc2:	6063      	str	r3, [r4, #4]
 8000dc4:	6923      	ldr	r3, [r4, #16]
 8000dc6:	6023      	str	r3, [r4, #0]
 8000dc8:	89a3      	ldrh	r3, [r4, #12]
 8000dca:	f043 0308 	orr.w	r3, r3, #8
 8000dce:	81a3      	strh	r3, [r4, #12]
 8000dd0:	6923      	ldr	r3, [r4, #16]
 8000dd2:	b94b      	cbnz	r3, 8000de8 <__swsetup_r+0x7c>
 8000dd4:	89a3      	ldrh	r3, [r4, #12]
 8000dd6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000dda:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000dde:	d003      	beq.n	8000de8 <__swsetup_r+0x7c>
 8000de0:	4621      	mov	r1, r4
 8000de2:	4628      	mov	r0, r5
 8000de4:	f000 fa5c 	bl	80012a0 <__smakebuf_r>
 8000de8:	89a0      	ldrh	r0, [r4, #12]
 8000dea:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000dee:	f010 0301 	ands.w	r3, r0, #1
 8000df2:	d00a      	beq.n	8000e0a <__swsetup_r+0x9e>
 8000df4:	2300      	movs	r3, #0
 8000df6:	60a3      	str	r3, [r4, #8]
 8000df8:	6963      	ldr	r3, [r4, #20]
 8000dfa:	425b      	negs	r3, r3
 8000dfc:	61a3      	str	r3, [r4, #24]
 8000dfe:	6923      	ldr	r3, [r4, #16]
 8000e00:	b943      	cbnz	r3, 8000e14 <__swsetup_r+0xa8>
 8000e02:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000e06:	d1c4      	bne.n	8000d92 <__swsetup_r+0x26>
 8000e08:	bd38      	pop	{r3, r4, r5, pc}
 8000e0a:	0781      	lsls	r1, r0, #30
 8000e0c:	bf58      	it	pl
 8000e0e:	6963      	ldrpl	r3, [r4, #20]
 8000e10:	60a3      	str	r3, [r4, #8]
 8000e12:	e7f4      	b.n	8000dfe <__swsetup_r+0x92>
 8000e14:	2000      	movs	r0, #0
 8000e16:	e7f7      	b.n	8000e08 <__swsetup_r+0x9c>
 8000e18:	2000005c 	.word	0x2000005c

08000e1c <memset>:
 8000e1c:	4402      	add	r2, r0
 8000e1e:	4603      	mov	r3, r0
 8000e20:	4293      	cmp	r3, r2
 8000e22:	d100      	bne.n	8000e26 <memset+0xa>
 8000e24:	4770      	bx	lr
 8000e26:	f803 1b01 	strb.w	r1, [r3], #1
 8000e2a:	e7f9      	b.n	8000e20 <memset+0x4>

08000e2c <_close_r>:
 8000e2c:	b538      	push	{r3, r4, r5, lr}
 8000e2e:	4d06      	ldr	r5, [pc, #24]	; (8000e48 <_close_r+0x1c>)
 8000e30:	2300      	movs	r3, #0
 8000e32:	4604      	mov	r4, r0
 8000e34:	4608      	mov	r0, r1
 8000e36:	602b      	str	r3, [r5, #0]
 8000e38:	f000 fad4 	bl	80013e4 <_close>
 8000e3c:	1c43      	adds	r3, r0, #1
 8000e3e:	d102      	bne.n	8000e46 <_close_r+0x1a>
 8000e40:	682b      	ldr	r3, [r5, #0]
 8000e42:	b103      	cbz	r3, 8000e46 <_close_r+0x1a>
 8000e44:	6023      	str	r3, [r4, #0]
 8000e46:	bd38      	pop	{r3, r4, r5, pc}
 8000e48:	200001b8 	.word	0x200001b8

08000e4c <_lseek_r>:
 8000e4c:	b538      	push	{r3, r4, r5, lr}
 8000e4e:	4d07      	ldr	r5, [pc, #28]	; (8000e6c <_lseek_r+0x20>)
 8000e50:	4604      	mov	r4, r0
 8000e52:	4608      	mov	r0, r1
 8000e54:	4611      	mov	r1, r2
 8000e56:	2200      	movs	r2, #0
 8000e58:	602a      	str	r2, [r5, #0]
 8000e5a:	461a      	mov	r2, r3
 8000e5c:	f000 fada 	bl	8001414 <_lseek>
 8000e60:	1c43      	adds	r3, r0, #1
 8000e62:	d102      	bne.n	8000e6a <_lseek_r+0x1e>
 8000e64:	682b      	ldr	r3, [r5, #0]
 8000e66:	b103      	cbz	r3, 8000e6a <_lseek_r+0x1e>
 8000e68:	6023      	str	r3, [r4, #0]
 8000e6a:	bd38      	pop	{r3, r4, r5, pc}
 8000e6c:	200001b8 	.word	0x200001b8

08000e70 <_read_r>:
 8000e70:	b538      	push	{r3, r4, r5, lr}
 8000e72:	4d07      	ldr	r5, [pc, #28]	; (8000e90 <_read_r+0x20>)
 8000e74:	4604      	mov	r4, r0
 8000e76:	4608      	mov	r0, r1
 8000e78:	4611      	mov	r1, r2
 8000e7a:	2200      	movs	r2, #0
 8000e7c:	602a      	str	r2, [r5, #0]
 8000e7e:	461a      	mov	r2, r3
 8000e80:	f000 fad0 	bl	8001424 <_read>
 8000e84:	1c43      	adds	r3, r0, #1
 8000e86:	d102      	bne.n	8000e8e <_read_r+0x1e>
 8000e88:	682b      	ldr	r3, [r5, #0]
 8000e8a:	b103      	cbz	r3, 8000e8e <_read_r+0x1e>
 8000e8c:	6023      	str	r3, [r4, #0]
 8000e8e:	bd38      	pop	{r3, r4, r5, pc}
 8000e90:	200001b8 	.word	0x200001b8

08000e94 <_write_r>:
 8000e94:	b538      	push	{r3, r4, r5, lr}
 8000e96:	4d07      	ldr	r5, [pc, #28]	; (8000eb4 <_write_r+0x20>)
 8000e98:	4604      	mov	r4, r0
 8000e9a:	4608      	mov	r0, r1
 8000e9c:	4611      	mov	r1, r2
 8000e9e:	2200      	movs	r2, #0
 8000ea0:	602a      	str	r2, [r5, #0]
 8000ea2:	461a      	mov	r2, r3
 8000ea4:	f7ff fa1b 	bl	80002de <_write>
 8000ea8:	1c43      	adds	r3, r0, #1
 8000eaa:	d102      	bne.n	8000eb2 <_write_r+0x1e>
 8000eac:	682b      	ldr	r3, [r5, #0]
 8000eae:	b103      	cbz	r3, 8000eb2 <_write_r+0x1e>
 8000eb0:	6023      	str	r3, [r4, #0]
 8000eb2:	bd38      	pop	{r3, r4, r5, pc}
 8000eb4:	200001b8 	.word	0x200001b8

08000eb8 <__libc_init_array>:
 8000eb8:	b570      	push	{r4, r5, r6, lr}
 8000eba:	4d0d      	ldr	r5, [pc, #52]	; (8000ef0 <__libc_init_array+0x38>)
 8000ebc:	4c0d      	ldr	r4, [pc, #52]	; (8000ef4 <__libc_init_array+0x3c>)
 8000ebe:	1b64      	subs	r4, r4, r5
 8000ec0:	10a4      	asrs	r4, r4, #2
 8000ec2:	2600      	movs	r6, #0
 8000ec4:	42a6      	cmp	r6, r4
 8000ec6:	d109      	bne.n	8000edc <__libc_init_array+0x24>
 8000ec8:	4d0b      	ldr	r5, [pc, #44]	; (8000ef8 <__libc_init_array+0x40>)
 8000eca:	4c0c      	ldr	r4, [pc, #48]	; (8000efc <__libc_init_array+0x44>)
 8000ecc:	f000 fac0 	bl	8001450 <_init>
 8000ed0:	1b64      	subs	r4, r4, r5
 8000ed2:	10a4      	asrs	r4, r4, #2
 8000ed4:	2600      	movs	r6, #0
 8000ed6:	42a6      	cmp	r6, r4
 8000ed8:	d105      	bne.n	8000ee6 <__libc_init_array+0x2e>
 8000eda:	bd70      	pop	{r4, r5, r6, pc}
 8000edc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ee0:	4798      	blx	r3
 8000ee2:	3601      	adds	r6, #1
 8000ee4:	e7ee      	b.n	8000ec4 <__libc_init_array+0xc>
 8000ee6:	f855 3b04 	ldr.w	r3, [r5], #4
 8000eea:	4798      	blx	r3
 8000eec:	3601      	adds	r6, #1
 8000eee:	e7f2      	b.n	8000ed6 <__libc_init_array+0x1e>
 8000ef0:	080014f0 	.word	0x080014f0
 8000ef4:	080014f0 	.word	0x080014f0
 8000ef8:	080014f0 	.word	0x080014f0
 8000efc:	080014f4 	.word	0x080014f4

08000f00 <__retarget_lock_init_recursive>:
 8000f00:	4770      	bx	lr

08000f02 <__retarget_lock_acquire_recursive>:
 8000f02:	4770      	bx	lr

08000f04 <__retarget_lock_release_recursive>:
 8000f04:	4770      	bx	lr
	...

08000f08 <_free_r>:
 8000f08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000f0a:	2900      	cmp	r1, #0
 8000f0c:	d044      	beq.n	8000f98 <_free_r+0x90>
 8000f0e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000f12:	9001      	str	r0, [sp, #4]
 8000f14:	2b00      	cmp	r3, #0
 8000f16:	f1a1 0404 	sub.w	r4, r1, #4
 8000f1a:	bfb8      	it	lt
 8000f1c:	18e4      	addlt	r4, r4, r3
 8000f1e:	f000 f8df 	bl	80010e0 <__malloc_lock>
 8000f22:	4a1e      	ldr	r2, [pc, #120]	; (8000f9c <_free_r+0x94>)
 8000f24:	9801      	ldr	r0, [sp, #4]
 8000f26:	6813      	ldr	r3, [r2, #0]
 8000f28:	b933      	cbnz	r3, 8000f38 <_free_r+0x30>
 8000f2a:	6063      	str	r3, [r4, #4]
 8000f2c:	6014      	str	r4, [r2, #0]
 8000f2e:	b003      	add	sp, #12
 8000f30:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000f34:	f000 b8da 	b.w	80010ec <__malloc_unlock>
 8000f38:	42a3      	cmp	r3, r4
 8000f3a:	d908      	bls.n	8000f4e <_free_r+0x46>
 8000f3c:	6825      	ldr	r5, [r4, #0]
 8000f3e:	1961      	adds	r1, r4, r5
 8000f40:	428b      	cmp	r3, r1
 8000f42:	bf01      	itttt	eq
 8000f44:	6819      	ldreq	r1, [r3, #0]
 8000f46:	685b      	ldreq	r3, [r3, #4]
 8000f48:	1949      	addeq	r1, r1, r5
 8000f4a:	6021      	streq	r1, [r4, #0]
 8000f4c:	e7ed      	b.n	8000f2a <_free_r+0x22>
 8000f4e:	461a      	mov	r2, r3
 8000f50:	685b      	ldr	r3, [r3, #4]
 8000f52:	b10b      	cbz	r3, 8000f58 <_free_r+0x50>
 8000f54:	42a3      	cmp	r3, r4
 8000f56:	d9fa      	bls.n	8000f4e <_free_r+0x46>
 8000f58:	6811      	ldr	r1, [r2, #0]
 8000f5a:	1855      	adds	r5, r2, r1
 8000f5c:	42a5      	cmp	r5, r4
 8000f5e:	d10b      	bne.n	8000f78 <_free_r+0x70>
 8000f60:	6824      	ldr	r4, [r4, #0]
 8000f62:	4421      	add	r1, r4
 8000f64:	1854      	adds	r4, r2, r1
 8000f66:	42a3      	cmp	r3, r4
 8000f68:	6011      	str	r1, [r2, #0]
 8000f6a:	d1e0      	bne.n	8000f2e <_free_r+0x26>
 8000f6c:	681c      	ldr	r4, [r3, #0]
 8000f6e:	685b      	ldr	r3, [r3, #4]
 8000f70:	6053      	str	r3, [r2, #4]
 8000f72:	440c      	add	r4, r1
 8000f74:	6014      	str	r4, [r2, #0]
 8000f76:	e7da      	b.n	8000f2e <_free_r+0x26>
 8000f78:	d902      	bls.n	8000f80 <_free_r+0x78>
 8000f7a:	230c      	movs	r3, #12
 8000f7c:	6003      	str	r3, [r0, #0]
 8000f7e:	e7d6      	b.n	8000f2e <_free_r+0x26>
 8000f80:	6825      	ldr	r5, [r4, #0]
 8000f82:	1961      	adds	r1, r4, r5
 8000f84:	428b      	cmp	r3, r1
 8000f86:	bf04      	itt	eq
 8000f88:	6819      	ldreq	r1, [r3, #0]
 8000f8a:	685b      	ldreq	r3, [r3, #4]
 8000f8c:	6063      	str	r3, [r4, #4]
 8000f8e:	bf04      	itt	eq
 8000f90:	1949      	addeq	r1, r1, r5
 8000f92:	6021      	streq	r1, [r4, #0]
 8000f94:	6054      	str	r4, [r2, #4]
 8000f96:	e7ca      	b.n	8000f2e <_free_r+0x26>
 8000f98:	b003      	add	sp, #12
 8000f9a:	bd30      	pop	{r4, r5, pc}
 8000f9c:	200001c0 	.word	0x200001c0

08000fa0 <sbrk_aligned>:
 8000fa0:	b570      	push	{r4, r5, r6, lr}
 8000fa2:	4e0e      	ldr	r6, [pc, #56]	; (8000fdc <sbrk_aligned+0x3c>)
 8000fa4:	460c      	mov	r4, r1
 8000fa6:	6831      	ldr	r1, [r6, #0]
 8000fa8:	4605      	mov	r5, r0
 8000faa:	b911      	cbnz	r1, 8000fb2 <sbrk_aligned+0x12>
 8000fac:	f000 fa0a 	bl	80013c4 <_sbrk_r>
 8000fb0:	6030      	str	r0, [r6, #0]
 8000fb2:	4621      	mov	r1, r4
 8000fb4:	4628      	mov	r0, r5
 8000fb6:	f000 fa05 	bl	80013c4 <_sbrk_r>
 8000fba:	1c43      	adds	r3, r0, #1
 8000fbc:	d00a      	beq.n	8000fd4 <sbrk_aligned+0x34>
 8000fbe:	1cc4      	adds	r4, r0, #3
 8000fc0:	f024 0403 	bic.w	r4, r4, #3
 8000fc4:	42a0      	cmp	r0, r4
 8000fc6:	d007      	beq.n	8000fd8 <sbrk_aligned+0x38>
 8000fc8:	1a21      	subs	r1, r4, r0
 8000fca:	4628      	mov	r0, r5
 8000fcc:	f000 f9fa 	bl	80013c4 <_sbrk_r>
 8000fd0:	3001      	adds	r0, #1
 8000fd2:	d101      	bne.n	8000fd8 <sbrk_aligned+0x38>
 8000fd4:	f04f 34ff 	mov.w	r4, #4294967295
 8000fd8:	4620      	mov	r0, r4
 8000fda:	bd70      	pop	{r4, r5, r6, pc}
 8000fdc:	200001c4 	.word	0x200001c4

08000fe0 <_malloc_r>:
 8000fe0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000fe4:	1ccd      	adds	r5, r1, #3
 8000fe6:	f025 0503 	bic.w	r5, r5, #3
 8000fea:	3508      	adds	r5, #8
 8000fec:	2d0c      	cmp	r5, #12
 8000fee:	bf38      	it	cc
 8000ff0:	250c      	movcc	r5, #12
 8000ff2:	2d00      	cmp	r5, #0
 8000ff4:	4607      	mov	r7, r0
 8000ff6:	db01      	blt.n	8000ffc <_malloc_r+0x1c>
 8000ff8:	42a9      	cmp	r1, r5
 8000ffa:	d905      	bls.n	8001008 <_malloc_r+0x28>
 8000ffc:	230c      	movs	r3, #12
 8000ffe:	603b      	str	r3, [r7, #0]
 8001000:	2600      	movs	r6, #0
 8001002:	4630      	mov	r0, r6
 8001004:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001008:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80010dc <_malloc_r+0xfc>
 800100c:	f000 f868 	bl	80010e0 <__malloc_lock>
 8001010:	f8d8 3000 	ldr.w	r3, [r8]
 8001014:	461c      	mov	r4, r3
 8001016:	bb5c      	cbnz	r4, 8001070 <_malloc_r+0x90>
 8001018:	4629      	mov	r1, r5
 800101a:	4638      	mov	r0, r7
 800101c:	f7ff ffc0 	bl	8000fa0 <sbrk_aligned>
 8001020:	1c43      	adds	r3, r0, #1
 8001022:	4604      	mov	r4, r0
 8001024:	d155      	bne.n	80010d2 <_malloc_r+0xf2>
 8001026:	f8d8 4000 	ldr.w	r4, [r8]
 800102a:	4626      	mov	r6, r4
 800102c:	2e00      	cmp	r6, #0
 800102e:	d145      	bne.n	80010bc <_malloc_r+0xdc>
 8001030:	2c00      	cmp	r4, #0
 8001032:	d048      	beq.n	80010c6 <_malloc_r+0xe6>
 8001034:	6823      	ldr	r3, [r4, #0]
 8001036:	4631      	mov	r1, r6
 8001038:	4638      	mov	r0, r7
 800103a:	eb04 0903 	add.w	r9, r4, r3
 800103e:	f000 f9c1 	bl	80013c4 <_sbrk_r>
 8001042:	4581      	cmp	r9, r0
 8001044:	d13f      	bne.n	80010c6 <_malloc_r+0xe6>
 8001046:	6821      	ldr	r1, [r4, #0]
 8001048:	1a6d      	subs	r5, r5, r1
 800104a:	4629      	mov	r1, r5
 800104c:	4638      	mov	r0, r7
 800104e:	f7ff ffa7 	bl	8000fa0 <sbrk_aligned>
 8001052:	3001      	adds	r0, #1
 8001054:	d037      	beq.n	80010c6 <_malloc_r+0xe6>
 8001056:	6823      	ldr	r3, [r4, #0]
 8001058:	442b      	add	r3, r5
 800105a:	6023      	str	r3, [r4, #0]
 800105c:	f8d8 3000 	ldr.w	r3, [r8]
 8001060:	2b00      	cmp	r3, #0
 8001062:	d038      	beq.n	80010d6 <_malloc_r+0xf6>
 8001064:	685a      	ldr	r2, [r3, #4]
 8001066:	42a2      	cmp	r2, r4
 8001068:	d12b      	bne.n	80010c2 <_malloc_r+0xe2>
 800106a:	2200      	movs	r2, #0
 800106c:	605a      	str	r2, [r3, #4]
 800106e:	e00f      	b.n	8001090 <_malloc_r+0xb0>
 8001070:	6822      	ldr	r2, [r4, #0]
 8001072:	1b52      	subs	r2, r2, r5
 8001074:	d41f      	bmi.n	80010b6 <_malloc_r+0xd6>
 8001076:	2a0b      	cmp	r2, #11
 8001078:	d917      	bls.n	80010aa <_malloc_r+0xca>
 800107a:	1961      	adds	r1, r4, r5
 800107c:	42a3      	cmp	r3, r4
 800107e:	6025      	str	r5, [r4, #0]
 8001080:	bf18      	it	ne
 8001082:	6059      	strne	r1, [r3, #4]
 8001084:	6863      	ldr	r3, [r4, #4]
 8001086:	bf08      	it	eq
 8001088:	f8c8 1000 	streq.w	r1, [r8]
 800108c:	5162      	str	r2, [r4, r5]
 800108e:	604b      	str	r3, [r1, #4]
 8001090:	4638      	mov	r0, r7
 8001092:	f104 060b 	add.w	r6, r4, #11
 8001096:	f000 f829 	bl	80010ec <__malloc_unlock>
 800109a:	f026 0607 	bic.w	r6, r6, #7
 800109e:	1d23      	adds	r3, r4, #4
 80010a0:	1af2      	subs	r2, r6, r3
 80010a2:	d0ae      	beq.n	8001002 <_malloc_r+0x22>
 80010a4:	1b9b      	subs	r3, r3, r6
 80010a6:	50a3      	str	r3, [r4, r2]
 80010a8:	e7ab      	b.n	8001002 <_malloc_r+0x22>
 80010aa:	42a3      	cmp	r3, r4
 80010ac:	6862      	ldr	r2, [r4, #4]
 80010ae:	d1dd      	bne.n	800106c <_malloc_r+0x8c>
 80010b0:	f8c8 2000 	str.w	r2, [r8]
 80010b4:	e7ec      	b.n	8001090 <_malloc_r+0xb0>
 80010b6:	4623      	mov	r3, r4
 80010b8:	6864      	ldr	r4, [r4, #4]
 80010ba:	e7ac      	b.n	8001016 <_malloc_r+0x36>
 80010bc:	4634      	mov	r4, r6
 80010be:	6876      	ldr	r6, [r6, #4]
 80010c0:	e7b4      	b.n	800102c <_malloc_r+0x4c>
 80010c2:	4613      	mov	r3, r2
 80010c4:	e7cc      	b.n	8001060 <_malloc_r+0x80>
 80010c6:	230c      	movs	r3, #12
 80010c8:	603b      	str	r3, [r7, #0]
 80010ca:	4638      	mov	r0, r7
 80010cc:	f000 f80e 	bl	80010ec <__malloc_unlock>
 80010d0:	e797      	b.n	8001002 <_malloc_r+0x22>
 80010d2:	6025      	str	r5, [r4, #0]
 80010d4:	e7dc      	b.n	8001090 <_malloc_r+0xb0>
 80010d6:	605b      	str	r3, [r3, #4]
 80010d8:	deff      	udf	#255	; 0xff
 80010da:	bf00      	nop
 80010dc:	200001c0 	.word	0x200001c0

080010e0 <__malloc_lock>:
 80010e0:	4801      	ldr	r0, [pc, #4]	; (80010e8 <__malloc_lock+0x8>)
 80010e2:	f7ff bf0e 	b.w	8000f02 <__retarget_lock_acquire_recursive>
 80010e6:	bf00      	nop
 80010e8:	200001bc 	.word	0x200001bc

080010ec <__malloc_unlock>:
 80010ec:	4801      	ldr	r0, [pc, #4]	; (80010f4 <__malloc_unlock+0x8>)
 80010ee:	f7ff bf09 	b.w	8000f04 <__retarget_lock_release_recursive>
 80010f2:	bf00      	nop
 80010f4:	200001bc 	.word	0x200001bc

080010f8 <__sflush_r>:
 80010f8:	898a      	ldrh	r2, [r1, #12]
 80010fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010fe:	4605      	mov	r5, r0
 8001100:	0710      	lsls	r0, r2, #28
 8001102:	460c      	mov	r4, r1
 8001104:	d458      	bmi.n	80011b8 <__sflush_r+0xc0>
 8001106:	684b      	ldr	r3, [r1, #4]
 8001108:	2b00      	cmp	r3, #0
 800110a:	dc05      	bgt.n	8001118 <__sflush_r+0x20>
 800110c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800110e:	2b00      	cmp	r3, #0
 8001110:	dc02      	bgt.n	8001118 <__sflush_r+0x20>
 8001112:	2000      	movs	r0, #0
 8001114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001118:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800111a:	2e00      	cmp	r6, #0
 800111c:	d0f9      	beq.n	8001112 <__sflush_r+0x1a>
 800111e:	2300      	movs	r3, #0
 8001120:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001124:	682f      	ldr	r7, [r5, #0]
 8001126:	6a21      	ldr	r1, [r4, #32]
 8001128:	602b      	str	r3, [r5, #0]
 800112a:	d032      	beq.n	8001192 <__sflush_r+0x9a>
 800112c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800112e:	89a3      	ldrh	r3, [r4, #12]
 8001130:	075a      	lsls	r2, r3, #29
 8001132:	d505      	bpl.n	8001140 <__sflush_r+0x48>
 8001134:	6863      	ldr	r3, [r4, #4]
 8001136:	1ac0      	subs	r0, r0, r3
 8001138:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800113a:	b10b      	cbz	r3, 8001140 <__sflush_r+0x48>
 800113c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800113e:	1ac0      	subs	r0, r0, r3
 8001140:	2300      	movs	r3, #0
 8001142:	4602      	mov	r2, r0
 8001144:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001146:	6a21      	ldr	r1, [r4, #32]
 8001148:	4628      	mov	r0, r5
 800114a:	47b0      	blx	r6
 800114c:	1c43      	adds	r3, r0, #1
 800114e:	89a3      	ldrh	r3, [r4, #12]
 8001150:	d106      	bne.n	8001160 <__sflush_r+0x68>
 8001152:	6829      	ldr	r1, [r5, #0]
 8001154:	291d      	cmp	r1, #29
 8001156:	d82b      	bhi.n	80011b0 <__sflush_r+0xb8>
 8001158:	4a29      	ldr	r2, [pc, #164]	; (8001200 <__sflush_r+0x108>)
 800115a:	410a      	asrs	r2, r1
 800115c:	07d6      	lsls	r6, r2, #31
 800115e:	d427      	bmi.n	80011b0 <__sflush_r+0xb8>
 8001160:	2200      	movs	r2, #0
 8001162:	6062      	str	r2, [r4, #4]
 8001164:	04d9      	lsls	r1, r3, #19
 8001166:	6922      	ldr	r2, [r4, #16]
 8001168:	6022      	str	r2, [r4, #0]
 800116a:	d504      	bpl.n	8001176 <__sflush_r+0x7e>
 800116c:	1c42      	adds	r2, r0, #1
 800116e:	d101      	bne.n	8001174 <__sflush_r+0x7c>
 8001170:	682b      	ldr	r3, [r5, #0]
 8001172:	b903      	cbnz	r3, 8001176 <__sflush_r+0x7e>
 8001174:	6560      	str	r0, [r4, #84]	; 0x54
 8001176:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001178:	602f      	str	r7, [r5, #0]
 800117a:	2900      	cmp	r1, #0
 800117c:	d0c9      	beq.n	8001112 <__sflush_r+0x1a>
 800117e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001182:	4299      	cmp	r1, r3
 8001184:	d002      	beq.n	800118c <__sflush_r+0x94>
 8001186:	4628      	mov	r0, r5
 8001188:	f7ff febe 	bl	8000f08 <_free_r>
 800118c:	2000      	movs	r0, #0
 800118e:	6360      	str	r0, [r4, #52]	; 0x34
 8001190:	e7c0      	b.n	8001114 <__sflush_r+0x1c>
 8001192:	2301      	movs	r3, #1
 8001194:	4628      	mov	r0, r5
 8001196:	47b0      	blx	r6
 8001198:	1c41      	adds	r1, r0, #1
 800119a:	d1c8      	bne.n	800112e <__sflush_r+0x36>
 800119c:	682b      	ldr	r3, [r5, #0]
 800119e:	2b00      	cmp	r3, #0
 80011a0:	d0c5      	beq.n	800112e <__sflush_r+0x36>
 80011a2:	2b1d      	cmp	r3, #29
 80011a4:	d001      	beq.n	80011aa <__sflush_r+0xb2>
 80011a6:	2b16      	cmp	r3, #22
 80011a8:	d101      	bne.n	80011ae <__sflush_r+0xb6>
 80011aa:	602f      	str	r7, [r5, #0]
 80011ac:	e7b1      	b.n	8001112 <__sflush_r+0x1a>
 80011ae:	89a3      	ldrh	r3, [r4, #12]
 80011b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011b4:	81a3      	strh	r3, [r4, #12]
 80011b6:	e7ad      	b.n	8001114 <__sflush_r+0x1c>
 80011b8:	690f      	ldr	r7, [r1, #16]
 80011ba:	2f00      	cmp	r7, #0
 80011bc:	d0a9      	beq.n	8001112 <__sflush_r+0x1a>
 80011be:	0793      	lsls	r3, r2, #30
 80011c0:	680e      	ldr	r6, [r1, #0]
 80011c2:	bf08      	it	eq
 80011c4:	694b      	ldreq	r3, [r1, #20]
 80011c6:	600f      	str	r7, [r1, #0]
 80011c8:	bf18      	it	ne
 80011ca:	2300      	movne	r3, #0
 80011cc:	eba6 0807 	sub.w	r8, r6, r7
 80011d0:	608b      	str	r3, [r1, #8]
 80011d2:	f1b8 0f00 	cmp.w	r8, #0
 80011d6:	dd9c      	ble.n	8001112 <__sflush_r+0x1a>
 80011d8:	6a21      	ldr	r1, [r4, #32]
 80011da:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80011dc:	4643      	mov	r3, r8
 80011de:	463a      	mov	r2, r7
 80011e0:	4628      	mov	r0, r5
 80011e2:	47b0      	blx	r6
 80011e4:	2800      	cmp	r0, #0
 80011e6:	dc06      	bgt.n	80011f6 <__sflush_r+0xfe>
 80011e8:	89a3      	ldrh	r3, [r4, #12]
 80011ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011ee:	81a3      	strh	r3, [r4, #12]
 80011f0:	f04f 30ff 	mov.w	r0, #4294967295
 80011f4:	e78e      	b.n	8001114 <__sflush_r+0x1c>
 80011f6:	4407      	add	r7, r0
 80011f8:	eba8 0800 	sub.w	r8, r8, r0
 80011fc:	e7e9      	b.n	80011d2 <__sflush_r+0xda>
 80011fe:	bf00      	nop
 8001200:	dfbffffe 	.word	0xdfbffffe

08001204 <_fflush_r>:
 8001204:	b538      	push	{r3, r4, r5, lr}
 8001206:	690b      	ldr	r3, [r1, #16]
 8001208:	4605      	mov	r5, r0
 800120a:	460c      	mov	r4, r1
 800120c:	b913      	cbnz	r3, 8001214 <_fflush_r+0x10>
 800120e:	2500      	movs	r5, #0
 8001210:	4628      	mov	r0, r5
 8001212:	bd38      	pop	{r3, r4, r5, pc}
 8001214:	b118      	cbz	r0, 800121e <_fflush_r+0x1a>
 8001216:	6a03      	ldr	r3, [r0, #32]
 8001218:	b90b      	cbnz	r3, 800121e <_fflush_r+0x1a>
 800121a:	f7ff fcd7 	bl	8000bcc <__sinit>
 800121e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001222:	2b00      	cmp	r3, #0
 8001224:	d0f3      	beq.n	800120e <_fflush_r+0xa>
 8001226:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001228:	07d0      	lsls	r0, r2, #31
 800122a:	d404      	bmi.n	8001236 <_fflush_r+0x32>
 800122c:	0599      	lsls	r1, r3, #22
 800122e:	d402      	bmi.n	8001236 <_fflush_r+0x32>
 8001230:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001232:	f7ff fe66 	bl	8000f02 <__retarget_lock_acquire_recursive>
 8001236:	4628      	mov	r0, r5
 8001238:	4621      	mov	r1, r4
 800123a:	f7ff ff5d 	bl	80010f8 <__sflush_r>
 800123e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001240:	07da      	lsls	r2, r3, #31
 8001242:	4605      	mov	r5, r0
 8001244:	d4e4      	bmi.n	8001210 <_fflush_r+0xc>
 8001246:	89a3      	ldrh	r3, [r4, #12]
 8001248:	059b      	lsls	r3, r3, #22
 800124a:	d4e1      	bmi.n	8001210 <_fflush_r+0xc>
 800124c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800124e:	f7ff fe59 	bl	8000f04 <__retarget_lock_release_recursive>
 8001252:	e7dd      	b.n	8001210 <_fflush_r+0xc>

08001254 <__swhatbuf_r>:
 8001254:	b570      	push	{r4, r5, r6, lr}
 8001256:	460c      	mov	r4, r1
 8001258:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800125c:	2900      	cmp	r1, #0
 800125e:	b096      	sub	sp, #88	; 0x58
 8001260:	4615      	mov	r5, r2
 8001262:	461e      	mov	r6, r3
 8001264:	da0d      	bge.n	8001282 <__swhatbuf_r+0x2e>
 8001266:	89a3      	ldrh	r3, [r4, #12]
 8001268:	f013 0f80 	tst.w	r3, #128	; 0x80
 800126c:	f04f 0100 	mov.w	r1, #0
 8001270:	bf0c      	ite	eq
 8001272:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001276:	2340      	movne	r3, #64	; 0x40
 8001278:	2000      	movs	r0, #0
 800127a:	6031      	str	r1, [r6, #0]
 800127c:	602b      	str	r3, [r5, #0]
 800127e:	b016      	add	sp, #88	; 0x58
 8001280:	bd70      	pop	{r4, r5, r6, pc}
 8001282:	466a      	mov	r2, sp
 8001284:	f000 f87c 	bl	8001380 <_fstat_r>
 8001288:	2800      	cmp	r0, #0
 800128a:	dbec      	blt.n	8001266 <__swhatbuf_r+0x12>
 800128c:	9901      	ldr	r1, [sp, #4]
 800128e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001292:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001296:	4259      	negs	r1, r3
 8001298:	4159      	adcs	r1, r3
 800129a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800129e:	e7eb      	b.n	8001278 <__swhatbuf_r+0x24>

080012a0 <__smakebuf_r>:
 80012a0:	898b      	ldrh	r3, [r1, #12]
 80012a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012a4:	079d      	lsls	r5, r3, #30
 80012a6:	4606      	mov	r6, r0
 80012a8:	460c      	mov	r4, r1
 80012aa:	d507      	bpl.n	80012bc <__smakebuf_r+0x1c>
 80012ac:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012b0:	6023      	str	r3, [r4, #0]
 80012b2:	6123      	str	r3, [r4, #16]
 80012b4:	2301      	movs	r3, #1
 80012b6:	6163      	str	r3, [r4, #20]
 80012b8:	b002      	add	sp, #8
 80012ba:	bd70      	pop	{r4, r5, r6, pc}
 80012bc:	ab01      	add	r3, sp, #4
 80012be:	466a      	mov	r2, sp
 80012c0:	f7ff ffc8 	bl	8001254 <__swhatbuf_r>
 80012c4:	9900      	ldr	r1, [sp, #0]
 80012c6:	4605      	mov	r5, r0
 80012c8:	4630      	mov	r0, r6
 80012ca:	f7ff fe89 	bl	8000fe0 <_malloc_r>
 80012ce:	b948      	cbnz	r0, 80012e4 <__smakebuf_r+0x44>
 80012d0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012d4:	059a      	lsls	r2, r3, #22
 80012d6:	d4ef      	bmi.n	80012b8 <__smakebuf_r+0x18>
 80012d8:	f023 0303 	bic.w	r3, r3, #3
 80012dc:	f043 0302 	orr.w	r3, r3, #2
 80012e0:	81a3      	strh	r3, [r4, #12]
 80012e2:	e7e3      	b.n	80012ac <__smakebuf_r+0xc>
 80012e4:	89a3      	ldrh	r3, [r4, #12]
 80012e6:	6020      	str	r0, [r4, #0]
 80012e8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012ec:	81a3      	strh	r3, [r4, #12]
 80012ee:	9b00      	ldr	r3, [sp, #0]
 80012f0:	6163      	str	r3, [r4, #20]
 80012f2:	9b01      	ldr	r3, [sp, #4]
 80012f4:	6120      	str	r0, [r4, #16]
 80012f6:	b15b      	cbz	r3, 8001310 <__smakebuf_r+0x70>
 80012f8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012fc:	4630      	mov	r0, r6
 80012fe:	f000 f851 	bl	80013a4 <_isatty_r>
 8001302:	b128      	cbz	r0, 8001310 <__smakebuf_r+0x70>
 8001304:	89a3      	ldrh	r3, [r4, #12]
 8001306:	f023 0303 	bic.w	r3, r3, #3
 800130a:	f043 0301 	orr.w	r3, r3, #1
 800130e:	81a3      	strh	r3, [r4, #12]
 8001310:	89a3      	ldrh	r3, [r4, #12]
 8001312:	431d      	orrs	r5, r3
 8001314:	81a5      	strh	r5, [r4, #12]
 8001316:	e7cf      	b.n	80012b8 <__smakebuf_r+0x18>

08001318 <_putc_r>:
 8001318:	b570      	push	{r4, r5, r6, lr}
 800131a:	460d      	mov	r5, r1
 800131c:	4614      	mov	r4, r2
 800131e:	4606      	mov	r6, r0
 8001320:	b118      	cbz	r0, 800132a <_putc_r+0x12>
 8001322:	6a03      	ldr	r3, [r0, #32]
 8001324:	b90b      	cbnz	r3, 800132a <_putc_r+0x12>
 8001326:	f7ff fc51 	bl	8000bcc <__sinit>
 800132a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800132c:	07d8      	lsls	r0, r3, #31
 800132e:	d405      	bmi.n	800133c <_putc_r+0x24>
 8001330:	89a3      	ldrh	r3, [r4, #12]
 8001332:	0599      	lsls	r1, r3, #22
 8001334:	d402      	bmi.n	800133c <_putc_r+0x24>
 8001336:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001338:	f7ff fde3 	bl	8000f02 <__retarget_lock_acquire_recursive>
 800133c:	68a3      	ldr	r3, [r4, #8]
 800133e:	3b01      	subs	r3, #1
 8001340:	2b00      	cmp	r3, #0
 8001342:	60a3      	str	r3, [r4, #8]
 8001344:	da05      	bge.n	8001352 <_putc_r+0x3a>
 8001346:	69a2      	ldr	r2, [r4, #24]
 8001348:	4293      	cmp	r3, r2
 800134a:	db12      	blt.n	8001372 <_putc_r+0x5a>
 800134c:	b2eb      	uxtb	r3, r5
 800134e:	2b0a      	cmp	r3, #10
 8001350:	d00f      	beq.n	8001372 <_putc_r+0x5a>
 8001352:	6823      	ldr	r3, [r4, #0]
 8001354:	1c5a      	adds	r2, r3, #1
 8001356:	6022      	str	r2, [r4, #0]
 8001358:	701d      	strb	r5, [r3, #0]
 800135a:	b2ed      	uxtb	r5, r5
 800135c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800135e:	07da      	lsls	r2, r3, #31
 8001360:	d405      	bmi.n	800136e <_putc_r+0x56>
 8001362:	89a3      	ldrh	r3, [r4, #12]
 8001364:	059b      	lsls	r3, r3, #22
 8001366:	d402      	bmi.n	800136e <_putc_r+0x56>
 8001368:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800136a:	f7ff fdcb 	bl	8000f04 <__retarget_lock_release_recursive>
 800136e:	4628      	mov	r0, r5
 8001370:	bd70      	pop	{r4, r5, r6, pc}
 8001372:	4629      	mov	r1, r5
 8001374:	4622      	mov	r2, r4
 8001376:	4630      	mov	r0, r6
 8001378:	f7ff fcbb 	bl	8000cf2 <__swbuf_r>
 800137c:	4605      	mov	r5, r0
 800137e:	e7ed      	b.n	800135c <_putc_r+0x44>

08001380 <_fstat_r>:
 8001380:	b538      	push	{r3, r4, r5, lr}
 8001382:	4d07      	ldr	r5, [pc, #28]	; (80013a0 <_fstat_r+0x20>)
 8001384:	2300      	movs	r3, #0
 8001386:	4604      	mov	r4, r0
 8001388:	4608      	mov	r0, r1
 800138a:	4611      	mov	r1, r2
 800138c:	602b      	str	r3, [r5, #0]
 800138e:	f000 f831 	bl	80013f4 <_fstat>
 8001392:	1c43      	adds	r3, r0, #1
 8001394:	d102      	bne.n	800139c <_fstat_r+0x1c>
 8001396:	682b      	ldr	r3, [r5, #0]
 8001398:	b103      	cbz	r3, 800139c <_fstat_r+0x1c>
 800139a:	6023      	str	r3, [r4, #0]
 800139c:	bd38      	pop	{r3, r4, r5, pc}
 800139e:	bf00      	nop
 80013a0:	200001b8 	.word	0x200001b8

080013a4 <_isatty_r>:
 80013a4:	b538      	push	{r3, r4, r5, lr}
 80013a6:	4d06      	ldr	r5, [pc, #24]	; (80013c0 <_isatty_r+0x1c>)
 80013a8:	2300      	movs	r3, #0
 80013aa:	4604      	mov	r4, r0
 80013ac:	4608      	mov	r0, r1
 80013ae:	602b      	str	r3, [r5, #0]
 80013b0:	f000 f828 	bl	8001404 <_isatty>
 80013b4:	1c43      	adds	r3, r0, #1
 80013b6:	d102      	bne.n	80013be <_isatty_r+0x1a>
 80013b8:	682b      	ldr	r3, [r5, #0]
 80013ba:	b103      	cbz	r3, 80013be <_isatty_r+0x1a>
 80013bc:	6023      	str	r3, [r4, #0]
 80013be:	bd38      	pop	{r3, r4, r5, pc}
 80013c0:	200001b8 	.word	0x200001b8

080013c4 <_sbrk_r>:
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4d06      	ldr	r5, [pc, #24]	; (80013e0 <_sbrk_r+0x1c>)
 80013c8:	2300      	movs	r3, #0
 80013ca:	4604      	mov	r4, r0
 80013cc:	4608      	mov	r0, r1
 80013ce:	602b      	str	r3, [r5, #0]
 80013d0:	f000 f830 	bl	8001434 <_sbrk>
 80013d4:	1c43      	adds	r3, r0, #1
 80013d6:	d102      	bne.n	80013de <_sbrk_r+0x1a>
 80013d8:	682b      	ldr	r3, [r5, #0]
 80013da:	b103      	cbz	r3, 80013de <_sbrk_r+0x1a>
 80013dc:	6023      	str	r3, [r4, #0]
 80013de:	bd38      	pop	{r3, r4, r5, pc}
 80013e0:	200001b8 	.word	0x200001b8

080013e4 <_close>:
 80013e4:	4b02      	ldr	r3, [pc, #8]	; (80013f0 <_close+0xc>)
 80013e6:	2258      	movs	r2, #88	; 0x58
 80013e8:	601a      	str	r2, [r3, #0]
 80013ea:	f04f 30ff 	mov.w	r0, #4294967295
 80013ee:	4770      	bx	lr
 80013f0:	200001b8 	.word	0x200001b8

080013f4 <_fstat>:
 80013f4:	4b02      	ldr	r3, [pc, #8]	; (8001400 <_fstat+0xc>)
 80013f6:	2258      	movs	r2, #88	; 0x58
 80013f8:	601a      	str	r2, [r3, #0]
 80013fa:	f04f 30ff 	mov.w	r0, #4294967295
 80013fe:	4770      	bx	lr
 8001400:	200001b8 	.word	0x200001b8

08001404 <_isatty>:
 8001404:	4b02      	ldr	r3, [pc, #8]	; (8001410 <_isatty+0xc>)
 8001406:	2258      	movs	r2, #88	; 0x58
 8001408:	601a      	str	r2, [r3, #0]
 800140a:	2000      	movs	r0, #0
 800140c:	4770      	bx	lr
 800140e:	bf00      	nop
 8001410:	200001b8 	.word	0x200001b8

08001414 <_lseek>:
 8001414:	4b02      	ldr	r3, [pc, #8]	; (8001420 <_lseek+0xc>)
 8001416:	2258      	movs	r2, #88	; 0x58
 8001418:	601a      	str	r2, [r3, #0]
 800141a:	f04f 30ff 	mov.w	r0, #4294967295
 800141e:	4770      	bx	lr
 8001420:	200001b8 	.word	0x200001b8

08001424 <_read>:
 8001424:	4b02      	ldr	r3, [pc, #8]	; (8001430 <_read+0xc>)
 8001426:	2258      	movs	r2, #88	; 0x58
 8001428:	601a      	str	r2, [r3, #0]
 800142a:	f04f 30ff 	mov.w	r0, #4294967295
 800142e:	4770      	bx	lr
 8001430:	200001b8 	.word	0x200001b8

08001434 <_sbrk>:
 8001434:	4a04      	ldr	r2, [pc, #16]	; (8001448 <_sbrk+0x14>)
 8001436:	6811      	ldr	r1, [r2, #0]
 8001438:	4603      	mov	r3, r0
 800143a:	b909      	cbnz	r1, 8001440 <_sbrk+0xc>
 800143c:	4903      	ldr	r1, [pc, #12]	; (800144c <_sbrk+0x18>)
 800143e:	6011      	str	r1, [r2, #0]
 8001440:	6810      	ldr	r0, [r2, #0]
 8001442:	4403      	add	r3, r0
 8001444:	6013      	str	r3, [r2, #0]
 8001446:	4770      	bx	lr
 8001448:	200001c8 	.word	0x200001c8
 800144c:	200001d0 	.word	0x200001d0

08001450 <_init>:
 8001450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001452:	bf00      	nop
 8001454:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001456:	bc08      	pop	{r3}
 8001458:	469e      	mov	lr, r3
 800145a:	4770      	bx	lr

0800145c <_fini>:
 800145c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800145e:	bf00      	nop
 8001460:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001462:	bc08      	pop	{r3}
 8001464:	469e      	mov	lr, r3
 8001466:	4770      	bx	lr
